{
  "title": "Model",
  "type": "object",
  "properties": {
    "Globals": {
      "$ref": "#/definitions/__main____Globals"
    },
    "Resources": {
      "title": "Resources",
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_connector__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_simpletable__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_layerversion__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__aws_serverless_application__Resource"
          },
          {
            "$ref": "#/definitions/samtranslator__schema__any_cfn_resource__Resource"
          }
        ]
      }
    }
  },
  "required": [
    "Resources"
  ],
  "definitions": {
    "CodeUri": {
      "title": "CodeUri",
      "type": "object",
      "properties": {
        "Bucket": {
          "title": "Bucket",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Key": {
          "title": "Key",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Version": {
          "title": "Version",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "Bucket",
        "Key"
      ],
      "additionalProperties": false
    },
    "DeadLetterQueue": {
      "title": "DeadLetterQueue",
      "type": "object",
      "properties": {
        "TargetArn": {
          "title": "Targetarn",
          "type": "string"
        },
        "Type": {
          "title": "Type",
          "enum": [
            "SNS",
            "SQS"
          ],
          "type": "string"
        }
      },
      "required": [
        "TargetArn",
        "Type"
      ],
      "additionalProperties": false
    },
    "Hooks": {
      "title": "Hooks",
      "type": "object",
      "properties": {
        "PostTraffic": {
          "title": "Posttraffic",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "PreTraffic": {
          "title": "Pretraffic",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "DeploymentPreference": {
      "title": "DeploymentPreference",
      "type": "object",
      "properties": {
        "Alarms": {
          "title": "Alarms",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            {
              "type": "object"
            }
          ]
        },
        "Enabled": {
          "title": "Enabled",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object"
            }
          ]
        },
        "Hooks": {
          "$ref": "#/definitions/Hooks"
        },
        "PassthroughCondition": {
          "title": "Passthroughcondition",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object"
            }
          ]
        },
        "Role": {
          "title": "Role",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "TriggerConfigurations": {
          "title": "Triggerconfigurations"
        },
        "Type": {
          "title": "Type",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "EventInvokeOnFailure": {
      "title": "EventInvokeOnFailure",
      "type": "object",
      "properties": {
        "Destination": {
          "title": "Destination",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Type": {
          "title": "Type",
          "enum": [
            "SQS",
            "SNS",
            "Lambda",
            "EventBridge"
          ],
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventInvokeOnSuccess": {
      "title": "EventInvokeOnSuccess",
      "type": "object",
      "properties": {
        "Destination": {
          "title": "Destination",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Type": {
          "title": "Type",
          "enum": [
            "SQS",
            "SNS",
            "Lambda",
            "EventBridge"
          ],
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventInvokeDestinationConfig": {
      "title": "EventInvokeDestinationConfig",
      "type": "object",
      "properties": {
        "OnFailure": {
          "$ref": "#/definitions/EventInvokeOnFailure"
        },
        "OnSuccess": {
          "$ref": "#/definitions/EventInvokeOnSuccess"
        }
      },
      "additionalProperties": false
    },
    "EventInvokeConfig": {
      "title": "EventInvokeConfig",
      "type": "object",
      "properties": {
        "DestinationConfig": {
          "$ref": "#/definitions/EventInvokeDestinationConfig"
        },
        "MaximumEventAgeInSeconds": {
          "title": "Maximumeventageinseconds",
          "type": "integer"
        },
        "MaximumRetryAttempts": {
          "title": "Maximumretryattempts",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__Globals": {
      "title": "Globals",
      "type": "object",
      "properties": {
        "Handler": {
          "title": "Handler"
        },
        "Runtime": {
          "title": "Runtime"
        },
        "CodeUri": {
          "title": "Codeuri",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/CodeUri"
            }
          ]
        },
        "DeadLetterQueue": {
          "title": "Deadletterqueue",
          "anyOf": [
            {
              "type": "object"
            },
            {
              "$ref": "#/definitions/DeadLetterQueue"
            }
          ]
        },
        "Description": {
          "title": "Description"
        },
        "MemorySize": {
          "title": "Memorysize"
        },
        "Timeout": {
          "title": "Timeout"
        },
        "VpcConfig": {
          "title": "Vpcconfig"
        },
        "Environment": {
          "title": "Environment"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "Tracing": {
          "title": "Tracing",
          "anyOf": [
            {
              "enum": [
                "Active",
                "PassThrough"
              ],
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "KmsKeyArn": {
          "title": "Kmskeyarn"
        },
        "Layers": {
          "title": "Layers"
        },
        "AutoPublishAlias": {
          "title": "Autopublishalias",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "DeploymentPreference": {
          "$ref": "#/definitions/DeploymentPreference"
        },
        "PermissionsBoundary": {
          "title": "Permissionsboundary"
        },
        "ReservedConcurrentExecutions": {
          "title": "Reservedconcurrentexecutions"
        },
        "ProvisionedConcurrencyConfig": {
          "title": "Provisionedconcurrencyconfig"
        },
        "AssumeRolePolicyDocument": {
          "title": "Assumerolepolicydocument",
          "type": "object"
        },
        "EventInvokeConfig": {
          "$ref": "#/definitions/EventInvokeConfig"
        },
        "Architectures": {
          "title": "Architectures"
        },
        "EphemeralStorage": {
          "title": "Ephemeralstorage"
        }
      },
      "additionalProperties": false
    },
    "CognitoAuthorizerIdentity": {
      "title": "CognitoAuthorizerIdentity",
      "type": "object",
      "properties": {
        "Header": {
          "title": "Header",
          "type": "string"
        },
        "ReauthorizeEvery": {
          "title": "Reauthorizeevery",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "object"
            }
          ]
        },
        "ValidationExpression": {
          "title": "Validationexpression",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CognitoAuthorizer": {
      "title": "CognitoAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Identity": {
          "$ref": "#/definitions/CognitoAuthorizerIdentity"
        },
        "UserPoolArn": {
          "title": "Userpoolarn",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "UserPoolArn"
      ],
      "additionalProperties": false
    },
    "LambdaTokenAuthorizerIdentity": {
      "title": "LambdaTokenAuthorizerIdentity",
      "type": "object",
      "properties": {
        "ReauthorizeEvery": {
          "title": "Reauthorizeevery",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "object"
            }
          ]
        },
        "ValidationExpression": {
          "title": "Validationexpression",
          "type": "string"
        },
        "Header": {
          "title": "Header",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LambdaTokenAuthorizer": {
      "title": "LambdaTokenAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FunctionArn": {
          "title": "Functionarn",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "FunctionInvokeRole": {
          "title": "Functioninvokerole",
          "type": "string"
        },
        "FunctionPayloadType": {
          "title": "Functionpayloadtype",
          "enum": [
            "TOKEN"
          ],
          "type": "string"
        },
        "Identity": {
          "$ref": "#/definitions/LambdaTokenAuthorizerIdentity"
        }
      },
      "required": [
        "FunctionArn"
      ],
      "additionalProperties": false
    },
    "LambdaRequestAuthorizerIdentity": {
      "title": "LambdaRequestAuthorizerIdentity",
      "type": "object",
      "properties": {
        "Context": {
          "title": "Context",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Headers": {
          "title": "Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "QueryStrings": {
          "title": "Querystrings",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ReauthorizeEvery": {
          "title": "Reauthorizeevery",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "object"
            }
          ]
        },
        "StageVariables": {
          "title": "Stagevariables",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "LambdaRequestAuthorizer": {
      "title": "LambdaRequestAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FunctionArn": {
          "title": "Functionarn",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "FunctionInvokeRole": {
          "title": "Functioninvokerole",
          "type": "string"
        },
        "FunctionPayloadType": {
          "title": "Functionpayloadtype",
          "enum": [
            "REQUEST"
          ],
          "type": "string"
        },
        "Identity": {
          "$ref": "#/definitions/LambdaRequestAuthorizerIdentity"
        }
      },
      "required": [
        "FunctionArn"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__ResourcePolicy": {
      "title": "ResourcePolicy",
      "type": "object",
      "properties": {
        "AwsAccountBlacklist": {
          "title": "Awsaccountblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "AwsAccountWhitelist": {
          "title": "Awsaccountwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "CustomStatements": {
          "title": "Customstatements",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpcBlacklist": {
          "title": "Intrinsicvpcblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpcWhitelist": {
          "title": "Intrinsicvpcwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpceBlacklist": {
          "title": "Intrinsicvpceblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpceWhitelist": {
          "title": "Intrinsicvpcewhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IpRangeBlacklist": {
          "title": "Iprangeblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IpRangeWhitelist": {
          "title": "Iprangewhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceVpcBlacklist": {
          "title": "Sourcevpcblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceVpcWhitelist": {
          "title": "Sourcevpcwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "UsagePlan": {
      "title": "UsagePlan",
      "type": "object",
      "properties": {
        "CreateUsagePlan": {
          "title": "Createusageplan",
          "anyOf": [
            {
              "enum": [
                "PER_API",
                "SHARED",
                "NONE"
              ],
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Description": {
          "title": "Description"
        },
        "Quota": {
          "title": "Quota"
        },
        "Tags": {
          "title": "Tags"
        },
        "Throttle": {
          "title": "Throttle"
        },
        "UsagePlanName": {
          "title": "Usageplanname"
        }
      },
      "required": [
        "CreateUsagePlan"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__Auth": {
      "title": "Auth",
      "type": "object",
      "properties": {
        "AddDefaultAuthorizerToCorsPreflight": {
          "title": "Adddefaultauthorizertocorspreflight",
          "type": "boolean"
        },
        "ApiKeyRequired": {
          "title": "Apikeyrequired",
          "type": "boolean"
        },
        "Authorizers": {
          "title": "Authorizers",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/CognitoAuthorizer"
              },
              {
                "$ref": "#/definitions/LambdaTokenAuthorizer"
              },
              {
                "$ref": "#/definitions/LambdaRequestAuthorizer"
              }
            ]
          }
        },
        "DefaultAuthorizer": {
          "title": "Defaultauthorizer",
          "type": "string"
        },
        "InvokeRole": {
          "title": "Invokerole",
          "type": "string"
        },
        "ResourcePolicy": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__ResourcePolicy"
        },
        "UsagePlan": {
          "$ref": "#/definitions/UsagePlan"
        }
      },
      "additionalProperties": false
    },
    "Cors": {
      "title": "Cors",
      "type": "object",
      "properties": {
        "AllowCredentials": {
          "title": "Allowcredentials",
          "type": "boolean"
        },
        "AllowHeaders": {
          "title": "Allowheaders",
          "type": "string"
        },
        "AllowMethods": {
          "title": "Allowmethods",
          "type": "string"
        },
        "AllowOrigin": {
          "title": "Alloworigin",
          "type": "string"
        },
        "MaxAge": {
          "title": "Maxage",
          "type": "string"
        }
      },
      "required": [
        "AllowOrigin"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__Route53": {
      "title": "Route53",
      "type": "object",
      "properties": {
        "DistributionDomainName": {
          "title": "Distributiondomainname"
        },
        "EvaluateTargetHealth": {
          "title": "Evaluatetargethealth"
        },
        "HostedZoneId": {
          "title": "Hostedzoneid"
        },
        "HostedZoneName": {
          "title": "Hostedzonename"
        },
        "IpV6": {
          "title": "Ipv6",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__Domain": {
      "title": "Domain",
      "type": "object",
      "properties": {
        "BasePath": {
          "title": "Basepath"
        },
        "CertificateArn": {
          "title": "Certificatearn"
        },
        "DomainName": {
          "title": "Domainname"
        },
        "EndpointConfiguration": {
          "title": "Endpointconfiguration",
          "anyOf": [
            {
              "enum": [
                "REGIONAL",
                "EDGE"
              ],
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "MutualTlsAuthentication": {
          "title": "Mutualtlsauthentication"
        },
        "OwnershipVerificationCertificateArn": {
          "title": "Ownershipverificationcertificatearn"
        },
        "Route53": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Route53"
        },
        "SecurityPolicy": {
          "title": "Securitypolicy"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__Globals": {
      "title": "Globals",
      "type": "object",
      "properties": {
        "Auth": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Auth"
        },
        "Name": {
          "title": "Name"
        },
        "DefinitionUri": {
          "title": "Definitionuri"
        },
        "CacheClusterEnabled": {
          "title": "Cacheclusterenabled"
        },
        "CacheClusterSize": {
          "title": "Cacheclustersize"
        },
        "Variables": {
          "title": "Variables"
        },
        "EndpointConfiguration": {
          "title": "Endpointconfiguration"
        },
        "MethodSettings": {
          "title": "Methodsettings"
        },
        "BinaryMediaTypes": {
          "title": "Binarymediatypes"
        },
        "MinimumCompressionSize": {
          "title": "Minimumcompressionsize"
        },
        "Cors": {
          "title": "Cors",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            },
            {
              "$ref": "#/definitions/Cors"
            }
          ]
        },
        "GatewayResponses": {
          "title": "Gatewayresponses",
          "type": "object"
        },
        "AccessLogSetting": {
          "title": "Accesslogsetting"
        },
        "CanarySetting": {
          "title": "Canarysetting"
        },
        "TracingEnabled": {
          "title": "Tracingenabled"
        },
        "OpenApiVersion": {
          "title": "Openapiversion",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "Domain": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Domain"
        }
      },
      "additionalProperties": false
    },
    "OAuth2Authorizer": {
      "title": "OAuth2Authorizer",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IdentitySource": {
          "title": "Identitysource",
          "type": "string"
        },
        "JwtConfiguration": {
          "title": "Jwtconfiguration"
        }
      },
      "additionalProperties": false
    },
    "LambdaAuthorizerIdentity": {
      "title": "LambdaAuthorizerIdentity",
      "type": "object",
      "properties": {
        "Context": {
          "title": "Context",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Headers": {
          "title": "Headers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "QueryStrings": {
          "title": "Querystrings",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ReauthorizeEvery": {
          "title": "Reauthorizeevery",
          "type": "integer"
        },
        "StageVariables": {
          "title": "Stagevariables",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "LambdaAuthorizer": {
      "title": "LambdaAuthorizer",
      "type": "object",
      "properties": {
        "AuthorizerPayloadFormatVersion": {
          "title": "Authorizerpayloadformatversion",
          "anyOf": [
            {
              "enum": [
                "1.0",
                "2.0"
              ],
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "EnableSimpleResponses": {
          "title": "Enablesimpleresponses",
          "type": "boolean"
        },
        "FunctionArn": {
          "title": "Functionarn",
          "type": "object"
        },
        "FunctionInvokeRole": {
          "title": "Functioninvokerole",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Identity": {
          "$ref": "#/definitions/LambdaAuthorizerIdentity"
        }
      },
      "required": [
        "AuthorizerPayloadFormatVersion",
        "FunctionArn"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__Auth": {
      "title": "Auth",
      "type": "object",
      "properties": {
        "Authorizers": {
          "title": "Authorizers",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/OAuth2Authorizer"
              },
              {
                "$ref": "#/definitions/LambdaAuthorizer"
              }
            ]
          }
        },
        "DefaultAuthorizer": {
          "title": "Defaultauthorizer",
          "type": "string"
        },
        "EnableIamAuthorizer": {
          "title": "Enableiamauthorizer",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__Route53": {
      "title": "Route53",
      "type": "object",
      "properties": {
        "DistributionDomainName": {
          "title": "Distributiondomainname"
        },
        "EvaluateTargetHealth": {
          "title": "Evaluatetargethealth"
        },
        "HostedZoneId": {
          "title": "Hostedzoneid"
        },
        "HostedZoneName": {
          "title": "Hostedzonename"
        },
        "IpV6": {
          "title": "Ipv6",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__Domain": {
      "title": "Domain",
      "type": "object",
      "properties": {
        "BasePath": {
          "title": "Basepath",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CertificateArn": {
          "title": "Certificatearn"
        },
        "DomainName": {
          "title": "Domainname"
        },
        "EndpointConfiguration": {
          "title": "Endpointconfiguration",
          "anyOf": [
            {
              "enum": [
                "REGIONAL"
              ],
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "MutualTlsAuthentication": {
          "title": "Mutualtlsauthentication"
        },
        "OwnershipVerificationCertificateArn": {
          "title": "Ownershipverificationcertificatearn"
        },
        "Route53": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Route53"
        },
        "SecurityPolicy": {
          "title": "Securitypolicy"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__Globals": {
      "title": "Globals",
      "type": "object",
      "properties": {
        "Auth": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Auth"
        },
        "AccessLogSettings": {
          "title": "Accesslogsettings"
        },
        "StageVariables": {
          "title": "Stagevariables"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "RouteSettings": {
          "title": "Routesettings"
        },
        "FailOnWarnings": {
          "title": "Failonwarnings"
        },
        "Domain": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Domain"
        },
        "CorsConfiguration": {
          "title": "Corsconfiguration"
        },
        "DefaultRouteSettings": {
          "title": "Defaultroutesettings"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_simpletable__Globals": {
      "title": "Globals",
      "type": "object",
      "properties": {
        "SSESpecification": {
          "title": "Ssespecification"
        }
      },
      "additionalProperties": false
    },
    "__main____Globals": {
      "title": "Globals",
      "type": "object",
      "properties": {
        "Function": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__Globals"
        },
        "Api": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Globals"
        },
        "HttpApi": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Globals"
        },
        "SimpleTable": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_simpletable__Globals"
        }
      },
      "additionalProperties": false
    },
    "ResourceReference": {
      "title": "ResourceReference",
      "type": "object",
      "properties": {
        "Id": {
          "title": "Id",
          "type": "string"
        },
        "Arn": {
          "title": "Arn"
        },
        "Name": {
          "title": "Name"
        },
        "Qualifier": {
          "title": "Qualifier"
        },
        "QueueUrl": {
          "title": "Queueurl"
        },
        "ResourceId": {
          "title": "Resourceid"
        },
        "RoleName": {
          "title": "Rolename"
        },
        "Type": {
          "title": "Type",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_connector__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "Source": {
          "$ref": "#/definitions/ResourceReference"
        },
        "Destination": {
          "$ref": "#/definitions/ResourceReference"
        },
        "Permissions": {
          "title": "Permissions",
          "type": "array",
          "items": {
            "enum": [
              "Read",
              "Write"
            ],
            "type": "string"
          }
        }
      },
      "required": [
        "Source",
        "Destination",
        "Permissions"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_connector__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::Connector"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_connector__Properties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "S3EventProperties": {
      "title": "S3EventProperties",
      "type": "object",
      "properties": {
        "Bucket": {
          "title": "Bucket",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Events": {
          "title": "Events"
        },
        "Filter": {
          "title": "Filter"
        }
      },
      "required": [
        "Bucket"
      ],
      "additionalProperties": false
    },
    "S3Event": {
      "title": "S3Event",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/S3EventProperties"
        },
        "Type": {
          "title": "Type",
          "enum": [
            "S3"
          ],
          "type": "string"
        }
      },
      "required": [
        "Properties",
        "Type"
      ],
      "additionalProperties": false
    },
    "SqsSubscription": {
      "title": "SqsSubscription",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "QueueArn": {
          "title": "Queuearn",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "QueuePolicyLogicalId": {
          "title": "Queuepolicylogicalid",
          "type": "string"
        },
        "QueueUrl": {
          "title": "Queueurl",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "QueueArn",
        "QueueUrl"
      ],
      "additionalProperties": false
    },
    "SNSEventProperties": {
      "title": "SNSEventProperties",
      "type": "object",
      "properties": {
        "FilterPolicy": {
          "title": "Filterpolicy"
        },
        "Region": {
          "title": "Region"
        },
        "SqsSubscription": {
          "title": "Sqssubscription",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/SqsSubscription"
            }
          ]
        },
        "Topic": {
          "title": "Topic"
        }
      },
      "additionalProperties": false
    },
    "SNSEvent": {
      "title": "SNSEvent",
      "type": "object",
      "properties": {
        "Properties": {
          "$ref": "#/definitions/SNSEventProperties"
        },
        "Type": {
          "title": "Type",
          "enum": [
            "SNS"
          ],
          "type": "string"
        }
      },
      "required": [
        "Properties",
        "Type"
      ],
      "additionalProperties": false
    },
    "KinesisEventProperties": {
      "title": "KinesisEventProperties",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize"
        },
        "BisectBatchOnFunctionError": {
          "title": "Bisectbatchonfunctionerror"
        },
        "DestinationConfig": {
          "title": "Destinationconfig"
        },
        "Enabled": {
          "title": "Enabled"
        },
        "FilterCriteria": {
          "title": "Filtercriteria"
        },
        "FunctionResponseTypes": {
          "title": "Functionresponsetypes"
        },
        "MaximumBatchingWindowInSeconds": {
          "title": "Maximumbatchingwindowinseconds"
        },
        "MaximumRecordAgeInSeconds": {
          "title": "Maximumrecordageinseconds"
        },
        "MaximumRetryAttempts": {
          "title": "Maximumretryattempts"
        },
        "ParallelizationFactor": {
          "title": "Parallelizationfactor"
        },
        "StartingPosition": {
          "title": "Startingposition"
        },
        "Stream": {
          "title": "Stream"
        },
        "TumblingWindowInSeconds": {
          "title": "Tumblingwindowinseconds"
        }
      },
      "additionalProperties": false
    },
    "KinesisEvent": {
      "title": "KinesisEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "Kinesis"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/KinesisEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "DynamoDBEventProperties": {
      "title": "DynamoDBEventProperties",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize"
        },
        "BisectBatchOnFunctionError": {
          "title": "Bisectbatchonfunctionerror"
        },
        "DestinationConfig": {
          "title": "Destinationconfig"
        },
        "Enabled": {
          "title": "Enabled"
        },
        "FilterCriteria": {
          "title": "Filtercriteria"
        },
        "FunctionResponseTypes": {
          "title": "Functionresponsetypes"
        },
        "MaximumBatchingWindowInSeconds": {
          "title": "Maximumbatchingwindowinseconds"
        },
        "MaximumRecordAgeInSeconds": {
          "title": "Maximumrecordageinseconds"
        },
        "MaximumRetryAttempts": {
          "title": "Maximumretryattempts"
        },
        "ParallelizationFactor": {
          "title": "Parallelizationfactor"
        },
        "StartingPosition": {
          "title": "Startingposition"
        },
        "Stream": {
          "title": "Stream"
        },
        "TumblingWindowInSeconds": {
          "title": "Tumblingwindowinseconds"
        }
      },
      "additionalProperties": false
    },
    "DynamoDBEvent": {
      "title": "DynamoDBEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "DynamoDB"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/DynamoDBEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "SQSEventProperties": {
      "title": "SQSEventProperties",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize"
        },
        "Enabled": {
          "title": "Enabled"
        },
        "FilterCriteria": {
          "title": "Filtercriteria"
        },
        "MaximumBatchingWindowInSeconds": {
          "title": "Maximumbatchingwindowinseconds"
        },
        "Queue": {
          "title": "Queue"
        }
      },
      "additionalProperties": false
    },
    "SQSEvent": {
      "title": "SQSEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "SQS"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/SQSEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__ResourcePolicy": {
      "title": "ResourcePolicy",
      "type": "object",
      "properties": {
        "AwsAccountBlacklist": {
          "title": "Awsaccountblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "AwsAccountWhitelist": {
          "title": "Awsaccountwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "CustomStatements": {
          "title": "Customstatements",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpcBlacklist": {
          "title": "Intrinsicvpcblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpcWhitelist": {
          "title": "Intrinsicvpcwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpceBlacklist": {
          "title": "Intrinsicvpceblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpceWhitelist": {
          "title": "Intrinsicvpcewhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IpRangeBlacklist": {
          "title": "Iprangeblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IpRangeWhitelist": {
          "title": "Iprangewhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceVpcBlacklist": {
          "title": "Sourcevpcblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceVpcWhitelist": {
          "title": "Sourcevpcwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "ApiAuth": {
      "title": "ApiAuth",
      "type": "object",
      "properties": {
        "ApiKeyRequired": {
          "title": "Apikeyrequired",
          "type": "boolean"
        },
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Authorizer": {
          "title": "Authorizer",
          "type": "string"
        },
        "InvokeRole": {
          "title": "Invokerole",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "ResourcePolicy": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__ResourcePolicy"
        }
      },
      "additionalProperties": false
    },
    "RequestModel": {
      "title": "RequestModel",
      "type": "object",
      "properties": {
        "Model": {
          "title": "Model",
          "type": "string"
        },
        "Required": {
          "title": "Required",
          "type": "boolean"
        },
        "ValidateBody": {
          "title": "Validatebody",
          "type": "boolean"
        },
        "ValidateParameters": {
          "title": "Validateparameters",
          "type": "boolean"
        }
      },
      "required": [
        "Model"
      ],
      "additionalProperties": false
    },
    "RequestParameters": {
      "title": "RequestParameters",
      "type": "object",
      "properties": {
        "Caching": {
          "title": "Caching",
          "type": "boolean"
        },
        "Required": {
          "title": "Required",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__ApiEventProperties": {
      "title": "ApiEventProperties",
      "type": "object",
      "properties": {
        "Auth": {
          "$ref": "#/definitions/ApiAuth"
        },
        "Method": {
          "title": "Method",
          "type": "string"
        },
        "Path": {
          "title": "Path",
          "type": "string"
        },
        "RequestModel": {
          "$ref": "#/definitions/RequestModel"
        },
        "RequestParameters": {
          "title": "Requestparameters",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/RequestParameters"
            }
          ]
        },
        "RestApiId": {
          "title": "Restapiid",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "Method",
        "Path"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__ApiEvent": {
      "title": "ApiEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "Api"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__ApiEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__DeadLetterConfig": {
      "title": "DeadLetterConfig",
      "type": "object",
      "properties": {
        "Arn": {
          "title": "Arn"
        },
        "QueueLogicalId": {
          "title": "Queuelogicalid",
          "type": "string"
        },
        "Type": {
          "title": "Type",
          "enum": [
            "SQS"
          ],
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EventsScheduleProperties": {
      "title": "EventsScheduleProperties",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__DeadLetterConfig"
        },
        "Description": {
          "title": "Description"
        },
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "Input": {
          "title": "Input"
        },
        "Name": {
          "title": "Name"
        },
        "RetryPolicy": {
          "title": "Retrypolicy"
        },
        "Schedule": {
          "title": "Schedule"
        },
        "State": {
          "title": "State"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__ScheduleEvent": {
      "title": "ScheduleEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "Schedule"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/EventsScheduleProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__ScheduleV2EventProperties": {
      "title": "ScheduleV2EventProperties",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__DeadLetterConfig"
        },
        "Description": {
          "title": "Description"
        },
        "EndDate": {
          "title": "Enddate"
        },
        "FlexibleTimeWindow": {
          "title": "Flexibletimewindow"
        },
        "GroupName": {
          "title": "Groupname"
        },
        "Input": {
          "title": "Input"
        },
        "KmsKeyArn": {
          "title": "Kmskeyarn"
        },
        "Name": {
          "title": "Name"
        },
        "PermissionsBoundary": {
          "title": "Permissionsboundary"
        },
        "RetryPolicy": {
          "title": "Retrypolicy"
        },
        "RoleArn": {
          "title": "Rolearn"
        },
        "ScheduleExpression": {
          "title": "Scheduleexpression"
        },
        "ScheduleExpressionTimezone": {
          "title": "Scheduleexpressiontimezone"
        },
        "StartDate": {
          "title": "Startdate"
        },
        "State": {
          "title": "State"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__ScheduleV2Event": {
      "title": "ScheduleV2Event",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "ScheduleV2"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__ScheduleV2EventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__CloudWatchEventProperties": {
      "title": "CloudWatchEventProperties",
      "type": "object",
      "properties": {
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "EventBusName": {
          "title": "Eventbusname"
        },
        "Input": {
          "title": "Input"
        },
        "InputPath": {
          "title": "Inputpath"
        },
        "Pattern": {
          "title": "Pattern"
        },
        "State": {
          "title": "State"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__CloudWatchEvent": {
      "title": "CloudWatchEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "CloudWatchEvent"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__CloudWatchEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "EventBridgeRuleTarget": {
      "title": "EventBridgeRuleTarget",
      "type": "object",
      "properties": {
        "Id": {
          "title": "Id"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__EventBridgeRuleEventProperties": {
      "title": "EventBridgeRuleEventProperties",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__DeadLetterConfig"
        },
        "EventBusName": {
          "title": "Eventbusname"
        },
        "Input": {
          "title": "Input"
        },
        "InputPath": {
          "title": "Inputpath"
        },
        "Pattern": {
          "title": "Pattern"
        },
        "RetryPolicy": {
          "title": "Retrypolicy"
        },
        "Target": {
          "$ref": "#/definitions/EventBridgeRuleTarget"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__EventBridgeRuleEvent": {
      "title": "EventBridgeRuleEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "EventBridgeRule"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__EventBridgeRuleEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "CloudWatchLogsEventProperties": {
      "title": "CloudWatchLogsEventProperties",
      "type": "object",
      "properties": {
        "FilterPattern": {
          "title": "Filterpattern"
        },
        "LogGroupName": {
          "title": "Loggroupname"
        }
      },
      "additionalProperties": false
    },
    "CloudWatchLogsEvent": {
      "title": "CloudWatchLogsEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "CloudWatchLogs"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/CloudWatchLogsEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "IoTRuleEventProperties": {
      "title": "IoTRuleEventProperties",
      "type": "object",
      "properties": {
        "AwsIotSqlVersion": {
          "title": "Awsiotsqlversion"
        },
        "Sql": {
          "title": "Sql"
        }
      },
      "additionalProperties": false
    },
    "IoTRuleEvent": {
      "title": "IoTRuleEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "IoTRule"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/IoTRuleEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "AlexaSkillEventProperties": {
      "title": "AlexaSkillEventProperties",
      "type": "object",
      "properties": {
        "SkillId": {
          "title": "Skillid",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AlexaSkillEvent": {
      "title": "AlexaSkillEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AlexaSkill"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/AlexaSkillEventProperties"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "CognitoEventProperties": {
      "title": "CognitoEventProperties",
      "type": "object",
      "properties": {
        "Trigger": {
          "title": "Trigger"
        },
        "UserPool": {
          "title": "Userpool",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "UserPool"
      ],
      "additionalProperties": false
    },
    "CognitoEvent": {
      "title": "CognitoEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "Cognito"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/CognitoEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "HttpApiAuth": {
      "title": "HttpApiAuth",
      "type": "object",
      "properties": {
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Authorizer": {
          "title": "Authorizer",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HttpApiEventProperties": {
      "title": "HttpApiEventProperties",
      "type": "object",
      "properties": {
        "ApiId": {
          "title": "Apiid",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Auth": {
          "$ref": "#/definitions/HttpApiAuth"
        },
        "Method": {
          "title": "Method",
          "type": "string"
        },
        "Path": {
          "title": "Path",
          "type": "string"
        },
        "PayloadFormatVersion": {
          "title": "Payloadformatversion",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "RouteSettings": {
          "title": "Routesettings"
        },
        "TimeoutInMillis": {
          "title": "Timeoutinmillis",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "HttpApiEvent": {
      "title": "HttpApiEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "HttpApi"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/HttpApiEventProperties"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "MSKEventProperties": {
      "title": "MSKEventProperties",
      "type": "object",
      "properties": {
        "ConsumerGroupId": {
          "title": "Consumergroupid"
        },
        "FilterCriteria": {
          "title": "Filtercriteria"
        },
        "MaximumBatchingWindowInSeconds": {
          "title": "Maximumbatchingwindowinseconds"
        },
        "StartingPosition": {
          "title": "Startingposition"
        },
        "Stream": {
          "title": "Stream"
        },
        "Topics": {
          "title": "Topics"
        }
      },
      "additionalProperties": false
    },
    "MSKEvent": {
      "title": "MSKEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "MSK"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/MSKEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "MQEventProperties": {
      "title": "MQEventProperties",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize"
        },
        "Broker": {
          "title": "Broker"
        },
        "Enabled": {
          "title": "Enabled"
        },
        "FilterCriteria": {
          "title": "Filtercriteria"
        },
        "MaximumBatchingWindowInSeconds": {
          "title": "Maximumbatchingwindowinseconds"
        },
        "Queues": {
          "title": "Queues"
        },
        "SecretsManagerKmsKeyId": {
          "title": "Secretsmanagerkmskeyid",
          "type": "string"
        },
        "SourceAccessConfigurations": {
          "title": "Sourceaccessconfigurations"
        }
      },
      "additionalProperties": false
    },
    "MQEvent": {
      "title": "MQEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "MQ"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/MQEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "SelfManagedKafkaEventProperties": {
      "title": "SelfManagedKafkaEventProperties",
      "type": "object",
      "properties": {
        "BatchSize": {
          "title": "Batchsize"
        },
        "ConsumerGroupId": {
          "title": "Consumergroupid"
        },
        "Enabled": {
          "title": "Enabled"
        },
        "FilterCriteria": {
          "title": "Filtercriteria"
        },
        "KafkaBootstrapServers": {
          "title": "Kafkabootstrapservers",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceAccessConfigurations": {
          "title": "Sourceaccessconfigurations"
        },
        "Topics": {
          "title": "Topics"
        }
      },
      "additionalProperties": false
    },
    "SelfManagedKafkaEvent": {
      "title": "SelfManagedKafkaEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "SelfManagedKafka"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/SelfManagedKafkaEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "FunctionUrlConfig": {
      "title": "FunctionUrlConfig",
      "type": "object",
      "properties": {
        "AuthType": {
          "title": "Authtype",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Cors": {
          "title": "Cors"
        }
      },
      "required": [
        "AuthType"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "Architectures": {
          "title": "Architectures"
        },
        "AssumeRolePolicyDocument": {
          "title": "Assumerolepolicydocument",
          "type": "object"
        },
        "AutoPublishAlias": {
          "title": "Autopublishalias",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "AutoPublishCodeSha256": {
          "title": "Autopublishcodesha256",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "CodeSigningConfigArn": {
          "title": "Codesigningconfigarn",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "CodeUri": {
          "title": "Codeuri",
          "description": "`CodeUri`   <a name=\"sam-function-codeuri\"></a>\nThe function code's Amazon S3 URI, path to local folder, or [FunctionCode](sam-property-function-functioncode.md) object\\. This property only applies if the `PackageType` property is set to `Zip`, otherwise it is ignored\\.\n**Notes**:\n1\\. If the `PackageType` property is set to `Zip` \\(default\\), then one of `CodeUri` or `InlineCode` is required\\.\n2\\. If an Amazon S3 URI or [FunctionCode](sam-property-function-functioncode.md) object is provided, the Amazon S3 object referenced must be a valid [Lambda deployment package](https://docs.aws.amazon.com/lambda/latest/dg/deployment-package-v2.html)\\.\n3\\. If the path to a local folder is provided, for the code to be transformed properly the template must go through the workflow that includes [sam build](sam-cli-command-reference-sam-build.md) followed by either [sam deploy](sam-cli-command-reference-sam-deploy.md) or [sam package](sam-cli-command-reference-sam-package.md)\\. By default, relative paths are resolved with respect to the AWS SAM template's location\\.\n*Type*: String \\| [FunctionCode](sam-property-function-functioncode.md)\n*Required*: Conditional\n*AWS CloudFormation compatibility*: This property is similar to the `[Code](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code)` property of an `AWS::Lambda::Function` resource\\. The nested Amazon S3 properties are named differently\\.\n",
          "markdownDescription": "`CodeUri`   <a name=\"sam-function-codeuri\"></a>\nThe function code's Amazon S3 URI, path to local folder, or [FunctionCode](sam-property-function-functioncode.md) object\\. This property only applies if the `PackageType` property is set to `Zip`, otherwise it is ignored\\.\n**Notes**:\n1\\. If the `PackageType` property is set to `Zip` \\(default\\), then one of `CodeUri` or `InlineCode` is required\\.\n2\\. If an Amazon S3 URI or [FunctionCode](sam-property-function-functioncode.md) object is provided, the Amazon S3 object referenced must be a valid [Lambda deployment package](https://docs.aws.amazon.com/lambda/latest/dg/deployment-package-v2.html)\\.\n3\\. If the path to a local folder is provided, for the code to be transformed properly the template must go through the workflow that includes [sam build](sam-cli-command-reference-sam-build.md) followed by either [sam deploy](sam-cli-command-reference-sam-deploy.md) or [sam package](sam-cli-command-reference-sam-package.md)\\. By default, relative paths are resolved with respect to the AWS SAM template's location\\.\n*Type*: String \\| [FunctionCode](sam-property-function-functioncode.md)\n*Required*: Conditional\n*AWS CloudFormation compatibility*: This property is similar to the `[Code](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code)` property of an `AWS::Lambda::Function` resource\\. The nested Amazon S3 properties are named differently\\.\n",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/CodeUri"
            }
          ]
        },
        "DeadLetterQueue": {
          "title": "Deadletterqueue",
          "anyOf": [
            {
              "type": "object"
            },
            {
              "$ref": "#/definitions/DeadLetterQueue"
            }
          ]
        },
        "DeploymentPreference": {
          "$ref": "#/definitions/DeploymentPreference"
        },
        "Description": {
          "title": "Description"
        },
        "Environment": {
          "title": "Environment"
        },
        "EphemeralStorage": {
          "title": "Ephemeralstorage"
        },
        "EventInvokeConfig": {
          "$ref": "#/definitions/EventInvokeConfig"
        },
        "Events": {
          "title": "Events",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/S3Event"
              },
              {
                "$ref": "#/definitions/SNSEvent"
              },
              {
                "$ref": "#/definitions/KinesisEvent"
              },
              {
                "$ref": "#/definitions/DynamoDBEvent"
              },
              {
                "$ref": "#/definitions/SQSEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__ApiEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__ScheduleEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__ScheduleV2Event"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__CloudWatchEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__EventBridgeRuleEvent"
              },
              {
                "$ref": "#/definitions/CloudWatchLogsEvent"
              },
              {
                "$ref": "#/definitions/IoTRuleEvent"
              },
              {
                "$ref": "#/definitions/AlexaSkillEvent"
              },
              {
                "$ref": "#/definitions/CognitoEvent"
              },
              {
                "$ref": "#/definitions/HttpApiEvent"
              },
              {
                "$ref": "#/definitions/MSKEvent"
              },
              {
                "$ref": "#/definitions/MQEvent"
              },
              {
                "$ref": "#/definitions/SelfManagedKafkaEvent"
              }
            ]
          }
        },
        "FileSystemConfigs": {
          "title": "Filesystemconfigs"
        },
        "FunctionName": {
          "title": "Functionname"
        },
        "FunctionUrlConfig": {
          "$ref": "#/definitions/FunctionUrlConfig"
        },
        "Handler": {
          "title": "Handler"
        },
        "ImageConfig": {
          "title": "Imageconfig"
        },
        "ImageUri": {
          "title": "Imageuri"
        },
        "InlineCode": {
          "title": "Inlinecode",
          "description": "`InlineCode`   <a name=\"sam-function-inlinecode\"></a>\nThe Lambda function code that is written directly in the template\\. This property only applies if the `PackageType` property is set to `Zip`, otherwise it is ignored\\.\nIf the `PackageType` property is set to `Zip` \\(default\\), then one of `CodeUri` or `InlineCode` is required\\.\n*Type*: String  \n*Required*: Conditional  \n*AWS CloudFormation compatibility*: This property is passed directly to the `[ZipFile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-zipfile)` property of the `AWS::Lambda::Function` `Code` data type\\.",
          "markdownDescription": "`InlineCode`   <a name=\"sam-function-inlinecode\"></a>\nThe Lambda function code that is written directly in the template\\. This property only applies if the `PackageType` property is set to `Zip`, otherwise it is ignored\\.\nIf the `PackageType` property is set to `Zip` \\(default\\), then one of `CodeUri` or `InlineCode` is required\\.\n*Type*: String  \n*Required*: Conditional  \n*AWS CloudFormation compatibility*: This property is passed directly to the `[ZipFile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-zipfile)` property of the `AWS::Lambda::Function` `Code` data type\\."
        },
        "KmsKeyArn": {
          "title": "Kmskeyarn"
        },
        "Layers": {
          "title": "Layers"
        },
        "MemorySize": {
          "title": "Memorysize"
        },
        "PackageType": {
          "title": "Packagetype"
        },
        "PermissionsBoundary": {
          "title": "Permissionsboundary"
        },
        "Policies": {
          "title": "Policies",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object"
                  }
                ]
              }
            },
            {
              "type": "object"
            }
          ]
        },
        "ProvisionedConcurrencyConfig": {
          "title": "Provisionedconcurrencyconfig"
        },
        "ReservedConcurrentExecutions": {
          "title": "Reservedconcurrentexecutions"
        },
        "Role": {
          "title": "Role",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Runtime": {
          "title": "Runtime"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "Timeout": {
          "title": "Timeout"
        },
        "Tracing": {
          "title": "Tracing",
          "anyOf": [
            {
              "enum": [
                "Active",
                "PassThrough"
              ],
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "VersionDescription": {
          "title": "Versiondescription"
        },
        "VpcConfig": {
          "title": "Vpcconfig"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_function__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::Function"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_function__Properties"
        },
        "DeletionPolicy": {
          "title": "Deletionpolicy"
        },
        "UpdateReplacePolicy": {
          "title": "Updatereplacepolicy"
        },
        "Condition": {
          "title": "Condition"
        },
        "DependsOn": {
          "title": "Dependson"
        },
        "Metadata": {
          "title": "Metadata"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "PrimaryKey": {
      "title": "PrimaryKey",
      "type": "object",
      "properties": {
        "Name": {
          "title": "Name"
        },
        "Type": {
          "title": "Type"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_simpletable__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "PrimaryKey": {
          "$ref": "#/definitions/PrimaryKey"
        },
        "ProvisionedThroughput": {
          "title": "Provisionedthroughput"
        },
        "SSESpecification": {
          "title": "Ssespecification"
        },
        "TableName": {
          "title": "Tablename"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_simpletable__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::SimpleTable"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_simpletable__Properties"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__DeadLetterConfig": {
      "title": "DeadLetterConfig",
      "type": "object",
      "properties": {
        "Arn": {
          "title": "Arn"
        },
        "QueueLogicalId": {
          "title": "Queuelogicalid",
          "type": "string"
        },
        "Type": {
          "title": "Type",
          "enum": [
            "SQS"
          ],
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ScheduleEventProperties": {
      "title": "ScheduleEventProperties",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__DeadLetterConfig"
        },
        "Description": {
          "title": "Description"
        },
        "Enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "Input": {
          "title": "Input"
        },
        "Name": {
          "title": "Name"
        },
        "RetryPolicy": {
          "title": "Retrypolicy"
        },
        "Schedule": {
          "title": "Schedule"
        },
        "State": {
          "title": "State"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__ScheduleEvent": {
      "title": "ScheduleEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "Schedule"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/ScheduleEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__ScheduleV2EventProperties": {
      "title": "ScheduleV2EventProperties",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__DeadLetterConfig"
        },
        "Description": {
          "title": "Description"
        },
        "EndDate": {
          "title": "Enddate"
        },
        "FlexibleTimeWindow": {
          "title": "Flexibletimewindow"
        },
        "GroupName": {
          "title": "Groupname"
        },
        "Input": {
          "title": "Input"
        },
        "KmsKeyArn": {
          "title": "Kmskeyarn"
        },
        "Name": {
          "title": "Name"
        },
        "PermissionsBoundary": {
          "title": "Permissionsboundary"
        },
        "RetryPolicy": {
          "title": "Retrypolicy"
        },
        "RoleArn": {
          "title": "Rolearn"
        },
        "ScheduleExpression": {
          "title": "Scheduleexpression"
        },
        "ScheduleExpressionTimezone": {
          "title": "Scheduleexpressiontimezone"
        },
        "StartDate": {
          "title": "Startdate"
        },
        "State": {
          "title": "State"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__ScheduleV2Event": {
      "title": "ScheduleV2Event",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "ScheduleV2"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__ScheduleV2EventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__CloudWatchEventProperties": {
      "title": "CloudWatchEventProperties",
      "type": "object",
      "properties": {
        "EventBusName": {
          "title": "Eventbusname"
        },
        "Input": {
          "title": "Input"
        },
        "InputPath": {
          "title": "Inputpath"
        },
        "Pattern": {
          "title": "Pattern"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__CloudWatchEvent": {
      "title": "CloudWatchEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "CloudWatchEvent"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__CloudWatchEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__EventBridgeRuleEventProperties": {
      "title": "EventBridgeRuleEventProperties",
      "type": "object",
      "properties": {
        "DeadLetterConfig": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__DeadLetterConfig"
        },
        "EventBusName": {
          "title": "Eventbusname"
        },
        "Input": {
          "title": "Input"
        },
        "InputPath": {
          "title": "Inputpath"
        },
        "Pattern": {
          "title": "Pattern"
        },
        "RetryPolicy": {
          "title": "Retrypolicy"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__EventBridgeRuleEvent": {
      "title": "EventBridgeRuleEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "EventBridgeRule"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__EventBridgeRuleEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__ResourcePolicy": {
      "title": "ResourcePolicy",
      "type": "object",
      "properties": {
        "AwsAccountBlacklist": {
          "title": "Awsaccountblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "AwsAccountWhitelist": {
          "title": "Awsaccountwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "CustomStatements": {
          "title": "Customstatements",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpcBlacklist": {
          "title": "Intrinsicvpcblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpcWhitelist": {
          "title": "Intrinsicvpcwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpceBlacklist": {
          "title": "Intrinsicvpceblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IntrinsicVpceWhitelist": {
          "title": "Intrinsicvpcewhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IpRangeBlacklist": {
          "title": "Iprangeblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "IpRangeWhitelist": {
          "title": "Iprangewhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceVpcBlacklist": {
          "title": "Sourcevpcblacklist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "SourceVpcWhitelist": {
          "title": "Sourcevpcwhitelist",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__Auth": {
      "title": "Auth",
      "type": "object",
      "properties": {
        "ApiKeyRequired": {
          "title": "Apikeyrequired",
          "type": "boolean"
        },
        "AuthorizationScopes": {
          "title": "Authorizationscopes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Authorizer": {
          "title": "Authorizer",
          "type": "string"
        },
        "ResourcePolicy": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__ResourcePolicy"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__ApiEventProperties": {
      "title": "ApiEventProperties",
      "type": "object",
      "properties": {
        "Auth": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__Auth"
        },
        "Method": {
          "title": "Method",
          "type": "string"
        },
        "Path": {
          "title": "Path",
          "type": "string"
        },
        "RestApiId": {
          "title": "Restapiid",
          "type": "object"
        },
        "UnescapeMappingTemplate": {
          "title": "Unescapemappingtemplate",
          "type": "boolean"
        }
      },
      "required": [
        "Method",
        "Path"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__ApiEvent": {
      "title": "ApiEvent",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "Api"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__ApiEventProperties"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "Definition": {
          "title": "Definition",
          "type": "object"
        },
        "DefinitionSubstitutions": {
          "title": "Definitionsubstitutions",
          "type": "object"
        },
        "DefinitionUri": {
          "title": "Definitionuri",
          "anyOf": [
            {
              "type": "string"
            },
            {}
          ]
        },
        "Events": {
          "title": "Events",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__ScheduleEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__ScheduleV2Event"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__CloudWatchEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__EventBridgeRuleEvent"
              },
              {
                "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__ApiEvent"
              }
            ]
          }
        },
        "Logging": {
          "title": "Logging"
        },
        "Name": {
          "title": "Name"
        },
        "PermissionsBoundary": {
          "title": "Permissionsboundary"
        },
        "Policies": {
          "title": "Policies",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "object"
            },
            {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          ]
        },
        "Role": {
          "title": "Role"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "Tracing": {
          "title": "Tracing"
        },
        "Type": {
          "title": "Type"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_statemachine__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::StateMachine"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_statemachine__Properties"
        },
        "Condition": {
          "title": "Condition"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "ContentUri": {
      "title": "ContentUri",
      "type": "object",
      "properties": {
        "Bucket": {
          "title": "Bucket"
        },
        "Key": {
          "title": "Key"
        },
        "Version": {
          "title": "Version"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_layerversion__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "CompatibleArchitectures": {
          "title": "Compatiblearchitectures"
        },
        "CompatibleRuntimes": {
          "title": "Compatibleruntimes"
        },
        "ContentUri": {
          "title": "Contenturi",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/ContentUri"
            }
          ]
        },
        "Description": {
          "title": "Description"
        },
        "LayerName": {
          "title": "Layername"
        },
        "LicenseInfo": {
          "title": "Licenseinfo"
        },
        "RetentionPolicy": {
          "title": "Retentionpolicy",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "ContentUri"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_layerversion__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::LayerVersion"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_layerversion__Properties"
        },
        "Condition": {
          "title": "Condition"
        },
        "DeletionPolicy": {
          "title": "Deletionpolicy"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__DefinitionUri": {
      "title": "DefinitionUri",
      "type": "object",
      "properties": {
        "Bucket": {
          "title": "Bucket"
        },
        "Key": {
          "title": "Key"
        },
        "Version": {
          "title": "Version"
        }
      },
      "additionalProperties": false
    },
    "EndpointConfiguration": {
      "title": "EndpointConfiguration",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type"
        },
        "VPCEndpointIds": {
          "title": "Vpcendpointids"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "AccessLogSetting": {
          "title": "Accesslogsetting"
        },
        "ApiKeySourceType": {
          "title": "Apikeysourcetype"
        },
        "Auth": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Auth"
        },
        "BinaryMediaTypes": {
          "title": "Binarymediatypes"
        },
        "CacheClusterEnabled": {
          "title": "Cacheclusterenabled"
        },
        "CacheClusterSize": {
          "title": "Cacheclustersize"
        },
        "CanarySetting": {
          "title": "Canarysetting"
        },
        "Cors": {
          "title": "Cors",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            },
            {
              "$ref": "#/definitions/Cors"
            }
          ]
        },
        "DefinitionBody": {
          "title": "Definitionbody",
          "type": "object"
        },
        "DefinitionUri": {
          "title": "Definitionuri",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__DefinitionUri"
            }
          ]
        },
        "Description": {
          "title": "Description"
        },
        "DisableExecuteApiEndpoint": {
          "title": "Disableexecuteapiendpoint"
        },
        "Domain": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Domain"
        },
        "EndpointConfiguration": {
          "title": "Endpointconfiguration",
          "anyOf": [
            {
              "type": "object"
            },
            {
              "$ref": "#/definitions/EndpointConfiguration"
            }
          ]
        },
        "FailOnWarnings": {
          "title": "Failonwarnings"
        },
        "GatewayResponses": {
          "title": "Gatewayresponses",
          "type": "object"
        },
        "MethodSettings": {
          "title": "Methodsettings"
        },
        "MinimumCompressionSize": {
          "title": "Minimumcompressionsize"
        },
        "Mode": {
          "title": "Mode"
        },
        "Models": {
          "title": "Models",
          "type": "object"
        },
        "Name": {
          "title": "Name"
        },
        "OpenApiVersion": {
          "title": "Openapiversion",
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ]
        },
        "StageName": {
          "title": "Stagename",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "TracingEnabled": {
          "title": "Tracingenabled"
        },
        "Variables": {
          "title": "Variables"
        }
      },
      "required": [
        "StageName"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_api__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::Api"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_api__Properties"
        },
        "Condition": {
          "title": "Condition"
        },
        "DeletionPolicy": {
          "title": "Deletionpolicy"
        },
        "UpdatePolicy": {
          "title": "Updatepolicy"
        },
        "UpdateReplacePolicy": {
          "title": "Updatereplacepolicy"
        },
        "DependsOn": {
          "title": "Dependson"
        },
        "Metadata": {
          "title": "Metadata"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__DefinitionUri": {
      "title": "DefinitionUri",
      "type": "object",
      "properties": {
        "Bucket": {
          "title": "Bucket",
          "type": "string"
        },
        "Key": {
          "title": "Key",
          "type": "string"
        },
        "Version": {
          "title": "Version",
          "type": "string"
        }
      },
      "required": [
        "Bucket",
        "Key"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "AccessLogSettings": {
          "title": "Accesslogsettings"
        },
        "Auth": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Auth"
        },
        "CorsConfiguration": {
          "title": "Corsconfiguration"
        },
        "DefaultRouteSettings": {
          "title": "Defaultroutesettings"
        },
        "DefinitionBody": {
          "title": "Definitionbody",
          "type": "object"
        },
        "DefinitionUri": {
          "title": "Definitionuri",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__DefinitionUri"
            }
          ]
        },
        "Description": {
          "title": "Description",
          "type": "string"
        },
        "DisableExecuteApiEndpoint": {
          "title": "Disableexecuteapiendpoint"
        },
        "Domain": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Domain"
        },
        "FailOnWarnings": {
          "title": "Failonwarnings"
        },
        "RouteSettings": {
          "title": "Routesettings"
        },
        "StageName": {
          "title": "Stagename"
        },
        "StageVariables": {
          "title": "Stagevariables"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "Name": {
          "title": "Name"
        }
      },
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_httpapi__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::HttpApi"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_httpapi__Properties"
        },
        "Metadata": {
          "title": "Metadata"
        },
        "Condition": {
          "title": "Condition"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "ApplicationId": {
          "title": "Applicationid",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        },
        "SemanticVersion": {
          "title": "Semanticversion",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "ApplicationId",
        "SemanticVersion"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_application__Properties": {
      "title": "Properties",
      "type": "object",
      "properties": {
        "Location": {
          "title": "Location",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "NotificationARNs": {
          "title": "Notificationarns"
        },
        "Parameters": {
          "title": "Parameters"
        },
        "Tags": {
          "title": "Tags",
          "type": "object"
        },
        "TimeoutInMinutes": {
          "title": "Timeoutinminutes"
        }
      },
      "required": [
        "Location"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__aws_serverless_application__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "enum": [
            "AWS::Serverless::Application"
          ],
          "type": "string"
        },
        "Properties": {
          "$ref": "#/definitions/samtranslator__schema__aws_serverless_application__Properties"
        },
        "Condition": {
          "title": "Condition"
        }
      },
      "required": [
        "Type",
        "Properties"
      ],
      "additionalProperties": false
    },
    "samtranslator__schema__any_cfn_resource__Resource": {
      "title": "Resource",
      "type": "object",
      "properties": {
        "Type": {
          "title": "Type",
          "pattern": "^((?!::Serverless::).)*$",
          "type": "string"
        }
      },
      "required": [
        "Type"
      ]
    }
  }
}
