{
  "Conditions": {
    "TrueCondition": {
      "Fn::Equals": [
        true, 
        true
      ]
    }
  }, 
  "Parameters": {
    "CodeKey": {
      "Default": "key", 
      "Type": "String"
    }, 
    "CodeBucket": {
      "Default": "sam-demo-bucket", 
      "Type": "String"
    }, 
    "FunctionName": {
      "Default": "MySuperFunctionName", 
      "Type": "String"
    }, 
    "MyExplicitApiName": {
      "Default": "SomeName", 
      "Type": "String"
    }, 
    "TracingConfigParam": {
      "Default": "PassThrough", 
      "Type": "String"
    }
  }, 
  "Resources": {
    "MyExplicitApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "BodyS3Location": {
          "Bucket": "sam-demo-bucket", 
          "Key": "swagger.yaml"
        }, 
        "Name": {
          "Ref": "MyExplicitApiName"
        }
      }
    }, 
    "MyTable": {
      "Type": "AWS::DynamoDB::Table", 
      "Properties": {
        "KeySchema": [
          {
            "KeyType": "HASH", 
            "AttributeName": "id"
          }
        ], 
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        }, 
        "AttributeDefinitions": [
          {
            "AttributeName": "id", 
            "AttributeType": "S"
          }
        ], 
        "ProvisionedThroughput": {
          "WriteCapacityUnits": 5, 
          "ReadCapacityUnits": 5
        }
      }
    }, 
    "SnsDlqQueue": {
      "Type": "AWS::SNS::Topic"
    }, 
    "MySqsDlqLambdaFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket", 
          "S3Key": "hello.zip"
        }, 
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "SqsDlqQueue", 
              "Arn"
            ]
          }
        }, 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ], 
        "Handler": "index.handler", 
        "Role": {
          "Fn::GetAtt": [
            "MySqsDlqLambdaFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "python2.7"
      }
    }, 
    "SqsDlqQueue": {
      "Type": "AWS::SQS::Queue"
    }, 
    "ApiWithExplicitS3Uri": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "BodyS3Location": {
          "Version": "myversion", 
          "Bucket": "mybucket", 
          "Key": "mykey"
        }
      }, 
      "Condition": "TrueCondition"
    }, 
    "MyExplicitApiDeployment31ec20c228": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "MyExplicitApi"
        }, 
        "Description": "RestApi deployment id: 31ec20c2288b273d15235777b0b90f3c0e2f9d52", 
        "StageName": "Stage"
      }
    }, 
    "FunctionWithExplicitS3Uri": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Handler": "stream.ddb_handler", 
        "Code": {
          "S3Bucket": "mybucket", 
          "S3Key": "mykey", 
          "S3ObjectVersion": "MyVersion"
        }, 
        "Role": {
          "Fn::GetAtt": [
            "FunctionWithExplicitS3UriRole", 
            "Arn"
          ]
        }, 
        "Runtime": "python2.7", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ]
      }
    }, 
    "MySnsDlqLambdaFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ],
        "Policies": [
          {
            "PolicyName": "DeadLetterQueuePolicy", 
            "PolicyDocument": {
              "Version": "2012-10-17", 
              "Statement": [
                {
                  "Action": "sns:Publish", 
                  "Resource": {
                    "Ref": "SnsDlqQueue"
                  }, 
                  "Effect": "Allow"
                }
              ]
            }
          }
        ], 
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "MyFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "TracingConfig": {
          "Mode": {
            "Ref": "TracingConfigParam"
          }
        }, 
        "Code": {
          "S3Bucket": {
            "Ref": "CodeBucket"
          }, 
          "S3Key": {
            "Fn::Sub": "code.zip.${CodeKey}"
          }, 
          "S3ObjectVersion": {
            "Fn::Join": [
              "", 
              [
                "some", 
                "version"
              ]
            ]
          }
        }, 
        "FunctionName": {
          "Ref": "FunctionName"
        }, 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ], 
        "Handler": {
          "Fn::Sub": [
            "${filename}.handler", 
            {
              "filename": "index"
            }
          ]
        }, 
        "Role": {
          "Fn::GetAtt": [
            "MyNewRole", 
            "Arn"
          ]
        }, 
        "Runtime": {
          "Fn::Join": [
            "", 
            [
              "nodejs", 
              "4.3"
            ]
          ]
        }
      }
    }, 
    "FunctionWithExplicitS3UriRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "DynamoDBFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole", 
          "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
        ],
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "MySnsDlqLambdaFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket", 
          "S3Key": "hello.zip"
        }, 
        "DeadLetterConfig": {
          "TargetArn": {
            "Ref": "SnsDlqQueue"
          }
        }, 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ], 
        "Handler": "index.handler", 
        "Role": {
          "Fn::GetAtt": [
            "MySnsDlqLambdaFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "python2.7"
      }
    },
    "MyNewRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "Policies": [
          {
            "PolicyName": "lambdaRole", 
            "PolicyDocument": {
              "Version": "2012-10-17", 
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:*", 
                    "logs:*"
                  ], 
                  "Resource": "*", 
                  "Effect": "Allow"
                }
              ]
            }
          }
        ], 
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "DynamoDBFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Handler": "stream.ddb_handler", 
        "Code": {
          "S3Bucket": "sam-demo-bucket", 
          "S3Key": "streams.zip"
        }, 
        "Role": {
          "Fn::GetAtt": [
            "DynamoDBFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "python2.7", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ]
      }
    }, 
    "ApiWithExplicitS3UridevStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiWithExplicitS3UriDeploymenta227798f00"
        }, 
        "RestApiId": {
          "Ref": "ApiWithExplicitS3Uri"
        }, 
        "StageName": "dev"
      }, 
      "Condition": "TrueCondition"
    }, 
    "DynamoDBFunctionMyDDBStream": {
      "Type": "AWS::Lambda::EventSourceMapping", 
      "Properties": {
        "BatchSize": 200, 
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MyTable", 
            "StreamArn"
          ]
        }, 
        "FunctionName": {
          "Ref": "DynamoDBFunction"
        }, 
        "StartingPosition": "LATEST"
      }
    }, 
    "ApiWithExplicitS3UriDeploymenta227798f00": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "ApiWithExplicitS3Uri"
        }, 
        "Description": "RestApi deployment id: a227798f004a50b665fe47a20bb9afbf076bd85d", 
        "StageName": "Stage"
      }, 
      "Condition": "TrueCondition"
    }, 
    "MySqsDlqLambdaFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ],
        "Policies": [
          {
            "PolicyName": "DeadLetterQueuePolicy", 
            "PolicyDocument": {
              "Version": "2012-10-17", 
              "Statement": [
                {
                  "Action": "sqs:SendMessage", 
                  "Resource": {
                    "Fn::GetAtt": [
                      "SqsDlqQueue", 
                      "Arn"
                    ]
                  }, 
                  "Effect": "Allow"
                }
              ]
            }
          }
        ], 
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "MyExplicitApidevStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "MyExplicitApiDeployment31ec20c228"
        }, 
        "RestApiId": {
          "Ref": "MyExplicitApi"
        }, 
        "Variables": {
          "FunctionName": {
            "Fn::Sub": "${MyFunction}"
          }, 
          "Var2": {
            "Fn::Join": [
              "join ", 
              [
                "some value ", 
                "with some other value"
              ]
            ]
          }
        }, 
        "StageName": "dev"
      }
    }, 
    "MyFunctionMyApiPermissiondev": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:InvokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/", 
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "MyExplicitApi"
              }
            }
          ]
        }
      }
    }
  }
}
