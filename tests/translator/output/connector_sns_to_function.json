{
  "Resources": {
    "MyConnectorWriteLambdaPermission": {
      "Metadata": {
        "aws:sam:connectors": {
          "MyConnector": {
            "Destination": {
              "Type": "AWS::Lambda::Function"
            },
            "Source": {
              "Type": "AWS::SNS::Topic"
            }
          }
        }
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyFunction",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "MySNSTopic"
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "MyFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "const AWS = require('aws-sdk');\nexports.handler = async (event) => {\n  console.log(JSON.stringify(event));\n};\n"
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "MyTable"
            }
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x"
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:{AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MySNSTopic": {
      "Type": "AWS::SNS::Topic"
    }
  }
}
