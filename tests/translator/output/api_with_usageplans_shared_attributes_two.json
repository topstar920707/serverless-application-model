{
  "Conditions": {
    "C1": {
      "Fn::Equals": [
        "test",
        "test"
      ]
    },
    "C2": {
      "Fn::Equals": [
        "test",
        "test"
      ]
    },
    "SharedUsagePlanCondition": {
      "Fn::Or": [
        {
          "Condition": "C2"
        },
        {
          "Condition": "C1"
        }
      ]
    }
  },
  "Resources": {
    "MyApiOne": {
      "Condition": "C1",
      "DeletionPolicy": "Delete",
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Ref": "AWS::StackName"
            },
            "version": "1.0"
          },
          "paths": {
            "/path/one": {
              "get": {
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionOne.Arn}/invocations"
                  }
                }
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "in": "header",
              "name": "x-api-key",
              "type": "apiKey"
            }
          },
          "swagger": "2.0"
        }
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "MyApiOneDeployment46fb22a429": {
      "Condition": "C1",
      "DeletionPolicy": "Delete",
      "Properties": {
        "Description": "RestApi deployment id: 46fb22a42926db6f64e09966936d074ec6bb9392",
        "RestApiId": {
          "Ref": "MyApiOne"
        },
        "StageName": "Stage"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "MyApiOneProdStage": {
      "Condition": "C1",
      "DeletionPolicy": "Delete",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiOneDeployment46fb22a429"
        },
        "RestApiId": {
          "Ref": "MyApiOne"
        },
        "StageName": "Prod"
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "MyApiTwo": {
      "Condition": "C2",
      "DeletionPolicy": "Retain",
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Ref": "AWS::StackName"
            },
            "version": "1.0"
          },
          "paths": {
            "/path/two": {
              "get": {
                "responses": {},
                "security": [
                  {
                    "api_key": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionTwo.Arn}/invocations"
                  }
                }
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "in": "header",
              "name": "x-api-key",
              "type": "apiKey"
            }
          },
          "swagger": "2.0"
        }
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "MyApiTwoDeploymente9d97923b9": {
      "Condition": "C2",
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "RestApi deployment id: e9d97923b94d0801cd85a8970b3c3f84aa274003",
        "RestApiId": {
          "Ref": "MyApiTwo"
        },
        "StageName": "Stage"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "MyApiTwoProdStage": {
      "Condition": "C2",
      "DeletionPolicy": "Retain",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiTwoDeploymente9d97923b9"
        },
        "RestApiId": {
          "Ref": "MyApiTwo"
        },
        "StageName": "Prod"
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "MyFunctionOne": {
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  return {\n  statusCode: 200,\n  body: JSON.stringify(event),\n  headers: {}\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionOneRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyFunctionOneApiKeyPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionOne"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/one",
            {
              "__ApiId__": {
                "Ref": "MyApiOne"
              },
              "__Stage__": "*"
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "MyFunctionOneRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyFunctionTwo": {
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  return {\n  statusCode: 200,\n  body: JSON.stringify(event),\n  headers: {}\n  }\n}\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionTwoRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyFunctionTwoApiKeyPermissionProd": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunctionTwo"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/two",
            {
              "__ApiId__": {
                "Ref": "MyApiTwo"
              },
              "__Stage__": "*"
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "MyFunctionTwoRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "ServerlessApiKey": {
      "Condition": "SharedUsagePlanCondition",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ServerlessUsagePlan"
      ],
      "Properties": {
        "Enabled": true,
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "MyApiOne"
            },
            "StageName": {
              "Ref": "MyApiOneProdStage"
            }
          },
          {
            "RestApiId": {
              "Ref": "MyApiTwo"
            },
            "StageName": {
              "Ref": "MyApiTwoProdStage"
            }
          }
        ]
      },
      "Type": "AWS::ApiGateway::ApiKey"
    },
    "ServerlessUsagePlan": {
      "Condition": "SharedUsagePlanCondition",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "MyApiOne",
        "MyApiTwo"
      ],
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "MyApiOne"
            },
            "Stage": {
              "Ref": "MyApiOneProdStage"
            }
          },
          {
            "ApiId": {
              "Ref": "MyApiTwo"
            },
            "Stage": {
              "Ref": "MyApiTwoProdStage"
            }
          }
        ]
      },
      "Type": "AWS::ApiGateway::UsagePlan"
    },
    "ServerlessUsagePlanKey": {
      "Condition": "SharedUsagePlanCondition",
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "ServerlessApiKey"
      ],
      "Properties": {
        "KeyId": {
          "Ref": "ServerlessApiKey"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "ServerlessUsagePlan"
        }
      },
      "Type": "AWS::ApiGateway::UsagePlanKey"
    }
  }
}
