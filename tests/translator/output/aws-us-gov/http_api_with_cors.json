{
  "Conditions": {
    "C1": {
      "Fn::Equals": [
        true,
        true
      ]
    }
  },
  "Resources": {
    "MyApiApiGatewayDefaultStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "MyApi"
        },
        "AutoDeploy": true,
        "StageName": "$default"
      }
    },
    "ServerlessHttpApiApiGatewayDefaultStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "ServerlessHttpApi"
        },
        "AutoDeploy": true,
        "StageName": "$default"
      }
    },
    "ServerlessHttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "$default": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations"
                  },
                  "payloadFormatVersion": "1.0"
                },
                "isDefaultRoute": true,
                "responses": {}
              }
            }
          },
          "tags": [
            {
              "name": "httpapi:createdBy",
              "x-amazon-apigateway-tag-value": "SAM"
            }
          ],
          "x-amazon-apigateway-cors": {
            "Fn::If": [
              "C1",
              {
                "allowHeaders": [
                  "x-apigateway-header"
                ],
                "allowMethods": [
                  "GET"
                ],
                "allowOrigins": [
                  "https://foo.com"
                ],
                "exposeHeaders": [
                  "x-amzn-header"
                ]
              },
              "AWS::NoValue"
            ]
          },
          "openapi": "3.0.1"
        }
      }
    },
    "HttpApiFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n console.log(\"Hello from MyAuthFunction\")\n  return {\n  statusCode: 200,\n  body: JSON.stringify(event),\n  headers: {}\n  }\n}\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "HttpApiFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ]
      }
    },
    "HttpApiFunctionSimpleCasePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "HttpApiFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*",
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    },
    "HttpApiFunctionImplicitApiPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "HttpApiFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*",
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "ServerlessHttpApi"
              }
            }
          ]
        }
      }
    },
    "HttpApiFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ]
      }
    },
    "MyApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "$default": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations"
                  },
                  "payloadFormatVersion": "1.0"
                },
                "isDefaultRoute": true,
                "responses": {}
              }
            }
          },
          "tags": [
            {
              "name": "httpapi:createdBy",
              "x-amazon-apigateway-tag-value": "SAM"
            }
          ],
          "x-amazon-apigateway-cors": {
            "Fn::If": [
              "C1",
              {
                "allowHeaders": [
                  "x-apigateway-header"
                ],
                "allowMethods": [
                  "GET"
                ],
                "allowOrigins": [
                  "https://foo.com"
                ],
                "exposeHeaders": [
                  "x-amzn-header"
                ]
              },
              "AWS::NoValue"
            ]
          },
          "openapi": "3.0.1"
        }
      }
    }
  }
}