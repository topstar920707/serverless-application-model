{
  "Parameters": {
    "MyDomainCert": {
      "Default": "arn:aws:acm:us-east-1:123455353535:certificate/6c911401-620d-4d41-b89e-366c238bb2f3",
      "Type": "String"
    },
    "MyDomainName": {
      "Default": "sam-example.com",
      "Type": "String"
    }
  },
  "Resources": {
    "ApiGatewayDomainNameV22dbf35af54": {
      "Properties": {
        "DomainName": "sam-example.com",
        "DomainNameConfigurations": [
          {
            "CertificateArn": "arn:aws:acm:us-east-1:123455353535:certificate/6c911401-620d-4d41-b89e-366c238bb2f3",
            "EndpointType": "REGIONAL",
            "SecurityPolicy": "TLS_1_2"
          }
        ],
        "MutualTlsAuthentication": {
          "TruststoreUri": "my-api-v2-truststore-uri",
          "TruststoreVersion": "my-api-v2-truststore-version"
        },
        "Tags": {
          "httpapi:createdBy": "SAM"
        }
      },
      "Type": "AWS::ApiGatewayV2::DomainName"
    },
    "HttpApiFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify('Hello from Lambda!'),\n  };\n  return response;\n};\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "HttpApiFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "HttpApiFunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "HttpApiFunctionSimpleCasePermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "HttpApiFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*",
            {
              "__ApiId__": {
                "Ref": "MyApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "MyApi": {
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Ref": "AWS::StackName"
            },
            "version": "1.0"
          },
          "openapi": "3.0.1",
          "paths": {
            "$default": {
              "x-amazon-apigateway-any-method": {
                "isDefaultRoute": true,
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations"
                  }
                }
              }
            },
            "/basic": {
              "post": {
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "payloadFormatVersion": "2.0",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations"
                  }
                }
              }
            }
          },
          "servers": [
            {
              "x-amazon-apigateway-endpoint-configuration": {
                "disableExecuteApiEndpoint": true
              }
            }
          ],
          "tags": [
            {
              "name": "httpapi:createdBy",
              "x-amazon-apigateway-tag-value": "SAM"
            }
          ]
        }
      },
      "Type": "AWS::ApiGatewayV2::Api"
    },
    "MyApiProdStage": {
      "Properties": {
        "ApiId": {
          "Ref": "MyApi"
        },
        "AutoDeploy": true,
        "StageName": "Prod",
        "Tags": {
          "httpapi:createdBy": "SAM"
        }
      },
      "Type": "AWS::ApiGatewayV2::Stage"
    },
    "MyApibasicApiMapping": {
      "Properties": {
        "ApiId": {
          "Ref": "MyApi"
        },
        "ApiMappingKey": "basic",
        "DomainName": {
          "Ref": "ApiGatewayDomainNameV22dbf35af54"
        },
        "Stage": {
          "Ref": "MyApiProdStage"
        }
      },
      "Type": "AWS::ApiGatewayV2::ApiMapping"
    },
    "MyApibeginhereApiMapping": {
      "Properties": {
        "ApiId": {
          "Ref": "MyApi"
        },
        "ApiMappingKey": "begin-here",
        "DomainName": {
          "Ref": "ApiGatewayDomainNameV22dbf35af54"
        },
        "Stage": {
          "Ref": "MyApiProdStage"
        }
      },
      "Type": "AWS::ApiGatewayV2::ApiMapping"
    },
    "RecordSetGroup1f4f569a7e": {
      "Properties": {
        "HostedZoneName": "sam-example.com.",
        "RecordSets": [
          {
            "AliasTarget": {
              "DNSName": {
                "Fn::GetAtt": [
                  "ApiGatewayDomainNameV22dbf35af54",
                  "RegionalDomainName"
                ]
              },
              "HostedZoneId": {
                "Fn::GetAtt": [
                  "ApiGatewayDomainNameV22dbf35af54",
                  "RegionalHostedZoneId"
                ]
              }
            },
            "Name": "sam-example.com",
            "Type": "A"
          }
        ]
      },
      "Type": "AWS::Route53::RecordSetGroup"
    }
  }
}
