{
  "Parameters": {
    "KMSKeyArn": {
      "Type": "String"
    },
    "ScheduleState": {
      "Default": "Disabled",
      "Type": "String"
    }
  },
  "Resources": {
    "ScheduledFunction": {
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "hello.zip",
          "S3ObjectVersion": "3Tcgv52_0GaDvhDva4YciYeqRyPnpIcO"
        },
        "Handler": "hello.handler",
        "Role": {
          "Fn::GetAtt": [
            "ScheduledFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "python3.10",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "ScheduledFunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "ScheduledFunctionSchedule1": {
      "Properties": {
        "Description": "Test Schedule",
        "Name": "test-schedule",
        "ScheduleExpression": "rate(1 minute)",
        "State": "Enabled",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScheduledFunction",
                "Arn"
              ]
            },
            "Id": "ScheduledFunctionSchedule1LambdaTarget"
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "ScheduledFunctionSchedule1Permission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ScheduledFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduledFunctionSchedule1",
            "Arn"
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "ScheduledFunctionSchedule2": {
      "Properties": {
        "Description": "Test Schedule",
        "Name": "test-schedule",
        "ScheduleExpression": "rate(1 minute)",
        "State": {
          "Fn::Sub": "Enabled"
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScheduledFunction",
                "Arn"
              ]
            },
            "Id": "ScheduledFunctionSchedule2LambdaTarget"
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "ScheduledFunctionSchedule2Permission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ScheduledFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduledFunctionSchedule2",
            "Arn"
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "ScheduledFunctionSchedule3": {
      "Properties": {
        "Description": "Test Schedule",
        "Name": "test-schedule",
        "ScheduleExpression": "rate(1 minute)",
        "State": {
          "Ref": "ScheduleState"
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ScheduledFunction",
                "Arn"
              ]
            },
            "Id": "ScheduledFunctionSchedule3LambdaTarget"
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "ScheduledFunctionSchedule3Permission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ScheduledFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ScheduledFunctionSchedule3",
            "Arn"
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "ScheduledFunctionScheduleV2": {
      "Properties": {
        "FlexibleTimeWindow": {
          "Mode": "OFF"
        },
        "Name": "ScheduledFunctionScheduleV2",
        "ScheduleExpression": "rate(1 minute)",
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "ScheduledFunction",
              "Arn"
            ]
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "ScheduledFunctionScheduleV2Role",
              "Arn"
            ]
          }
        }
      },
      "Type": "AWS::Scheduler::Schedule"
    },
    "ScheduledFunctionScheduleV2MoreProperties": {
      "Properties": {
        "Description": "Test Schedule",
        "EndDate": "2015-10-02T15:01:23",
        "FlexibleTimeWindow": {
          "MaximumWindowInMinutes": 5,
          "Mode": "FLEXIBLE"
        },
        "GroupName": "group-name",
        "KmsKeyArn": {
          "Ref": "KMSKeyArn"
        },
        "Name": "test-scheduler",
        "ScheduleExpression": "rate(1 minute)",
        "ScheduleExpressionTimezone": "UTC",
        "StartDate": "2014-10-02T15:01:23",
        "State": {
          "Ref": "ScheduleState"
        },
        "Target": {
          "Arn": {
            "Fn::GetAtt": [
              "ScheduledFunction",
              "Arn"
            ]
          },
          "RoleArn": {
            "Fn::GetAtt": [
              "ScheduledFunctionScheduleV2MorePropertiesRole",
              "Arn"
            ]
          }
        }
      },
      "Type": "AWS::Scheduler::Schedule"
    },
    "ScheduledFunctionScheduleV2MorePropertiesRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "scheduler.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PermissionsBoundary": "arn:aws:1234:iam:boundary/CustomerCreatedPermissionsBoundaryForSchedule",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ScheduledFunction",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "ScheduledFunctionScheduleV2MorePropertiesLambdaPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "ScheduledFunctionScheduleV2Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "scheduler.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "lambda:InvokeFunction",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "ScheduledFunction",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "ScheduledFunctionScheduleV2LambdaPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}
