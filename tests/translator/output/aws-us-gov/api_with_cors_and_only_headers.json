{
  "Resources": {
    "ImplicitApiFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket", 
          "S3Key": "member_portal.zip"
        }, 
        "Handler": "index.gethtml", 
        "Role": {
          "Fn::GetAtt": [
            "ImplicitApiFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "nodejs4.3", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ]
      }
    }, 
    "ImplicitApiFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "ServerlessRestApiDeployment8e16bddf6b": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        }, 
        "Description": "RestApi deployment id: 8e16bddf6b1212fc4a42840a3a6722842de272ca", 
        "StageName": "Stage"
      }
    }, 
    "ImplicitApiFunctionPostHtmlPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "ImplicitApiFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/", 
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    }, 
    "ExplicitApiProdStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "ExplicitApiDeployment03e65d7ea2"
        }, 
        "RestApiId": {
          "Ref": "ExplicitApi"
        }, 
        "StageName": "Prod"
      }
    }, 
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment8e16bddf6b"
        }, 
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        }, 
        "StageName": "Prod"
      }
    }, 
    "ExplicitApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0", 
            "title": {
              "Ref": "AWS::StackName"
            }
          }, 
          "paths": {
            "/add": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ImplicitApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }, 
              "options": {
                "x-amazon-apigateway-integration": {
                  "type": "mock", 
                  "requestTemplates": {
                    "application/json": "{\n  \"statusCode\" : 200\n}\n"
                  }, 
                  "responses": {
                    "default": {
                      "statusCode": "200", 
                      "responseTemplates": {
                        "application/json": "{}\n"
                      }, 
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'", 
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'", 
                        "method.response.header.Access-Control-Allow-Headers": "headers"
                      }
                    }
                  }
                }, 
                "consumes": [
                  "application/json"
                ], 
                "summary": "CORS support", 
                "responses": {
                  "200": {
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }, 
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }, 
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      }
                    }, 
                    "description": "Default response for CORS method"
                  }
                }, 
                "produces": [
                  "application/json"
                ]
              }
            }, 
            "/{proxy+}": {
              "options": {
                "x-amazon-apigateway-integration": {
                  "type": "mock", 
                  "requestTemplates": {
                    "application/json": "{\n  \"statusCode\" : 200\n}\n"
                  }, 
                  "responses": {
                    "default": {
                      "statusCode": "200", 
                      "responseTemplates": {
                        "application/json": "{}\n"
                      }, 
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'", 
                        "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'", 
                        "method.response.header.Access-Control-Allow-Headers": "headers"
                      }
                    }
                  }
                }, 
                "consumes": [
                  "application/json"
                ], 
                "summary": "CORS support", 
                "responses": {
                  "200": {
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }, 
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }, 
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      }
                    }, 
                    "description": "Default response for CORS method"
                  }
                }, 
                "produces": [
                  "application/json"
                ]
              }, 
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ImplicitApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }
          }, 
          "swagger": "2.0"
        }, 
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }, 
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      }
    }, 
    "ExplicitApiDeployment03e65d7ea2": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "ExplicitApi"
        }, 
        "Description": "RestApi deployment id: 03e65d7ea2275d648803eecb7fa8e0ae7cd8f0aa", 
        "StageName": "Stage"
      }
    }, 
    "ImplicitApiFunctionGetHtmlPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "ImplicitApiFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-us-gov:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/", 
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0", 
            "title": {
              "Ref": "AWS::StackName"
            }
          }, 
          "paths": {
            "/": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ImplicitApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }, 
              "options": {
                "x-amazon-apigateway-integration": {
                  "type": "mock", 
                  "requestTemplates": {
                    "application/json": "{\n  \"statusCode\" : 200\n}\n"
                  }, 
                  "responses": {
                    "default": {
                      "statusCode": "200", 
                      "responseTemplates": {
                        "application/json": "{}\n"
                      }, 
                      "responseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'", 
                        "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'", 
                        "method.response.header.Access-Control-Allow-Headers": "headers"
                      }
                    }
                  }
                }, 
                "consumes": [
                  "application/json"
                ], 
                "summary": "CORS support", 
                "responses": {
                  "200": {
                    "headers": {
                      "Access-Control-Allow-Origin": {
                        "type": "string"
                      }, 
                      "Access-Control-Allow-Headers": {
                        "type": "string"
                      }, 
                      "Access-Control-Allow-Methods": {
                        "type": "string"
                      }
                    }, 
                    "description": "Default response for CORS method"
                  }
                }, 
                "produces": [
                  "application/json"
                ]
              }, 
              "get": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-us-gov:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ImplicitApiFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }
          }, 
          "swagger": "2.0"
        }, 
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }, 
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      }
    }
  }
}