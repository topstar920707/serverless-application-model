{
  "Resources": {
    "FunctionWithOverrides": {
      "Properties": {
        "Architectures": [
          "x86_64"
        ],
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "hello.zip"
        },
        "Environment": {
          "Variables": {
            "Var1": "value1",
            "Var2": "value2",
            "Var3": "value3"
          }
        },
        "EphemeralStorage": {
          "Size": 1024
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:MyLayer:1"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:MyLayer2:2"
          }
        ],
        "MemorySize": 512,
        "ReservedConcurrentExecutions": 100,
        "Role": {
          "Fn::GetAtt": [
            "FunctionWithOverridesRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          },
          {
            "Key": "newtag1",
            "Value": "newvalue1"
          },
          {
            "Key": "tag1",
            "Value": "value1"
          }
        ],
        "Timeout": 100,
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-edcd9784",
            "sg-123"
          ],
          "SubnetIds": [
            "sub-id-2"
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "FunctionWithOverridesAliasprod": {
      "Properties": {
        "FunctionName": {
          "Ref": "FunctionWithOverrides"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "FunctionWithOverridesVersion096ed3b52b",
            "Version"
          ]
        },
        "Name": "prod"
      },
      "Type": "AWS::Lambda::Alias"
    },
    "FunctionWithOverridesRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws-us-gov:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        ],
        "PermissionsBoundary": "arn:aws:1234:iam:boundary/OverridePermissionsBoundary",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          },
          {
            "Key": "newtag1",
            "Value": "newvalue1"
          },
          {
            "Key": "tag1",
            "Value": "value1"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "FunctionWithOverridesVersion096ed3b52b": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FunctionWithOverrides"
        }
      },
      "Type": "AWS::Lambda::Version"
    },
    "MinimalFunction": {
      "Properties": {
        "Architectures": [
          "x86_64"
        ],
        "Code": {
          "S3Bucket": "global-bucket",
          "S3Key": "global.zip"
        },
        "Environment": {
          "Variables": {
            "Var1": "value1",
            "Var2": "value2"
          }
        },
        "EphemeralStorage": {
          "Size": 1024
        },
        "Handler": "hello.handler",
        "Layers": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:MyLayer:1"
          }
        ],
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 50,
        "Role": {
          "Fn::GetAtt": [
            "MinimalFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          },
          {
            "Key": "tag1",
            "Value": "value1"
          }
        ],
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-edcd9784"
          ],
          "SubnetIds": [
            "sub-id-2"
          ]
        }
      },
      "Type": "AWS::Lambda::Function"
    },
    "MinimalFunctionAliaslive": {
      "Properties": {
        "FunctionName": {
          "Ref": "MinimalFunction"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "MinimalFunctionVersion0a06fc8fb1",
            "Version"
          ]
        },
        "Name": "live"
      },
      "Type": "AWS::Lambda::Alias"
    },
    "MinimalFunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws-us-gov:iam::aws:policy/AWSXRayDaemonWriteAccess",
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        ],
        "PermissionsBoundary": "arn:aws:1234:iam:boundary/CustomerCreatedPermissionsBoundary",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          },
          {
            "Key": "tag1",
            "Value": "value1"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MinimalFunctionVersion0a06fc8fb1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MinimalFunction"
        }
      },
      "Type": "AWS::Lambda::Version"
    }
  }
}
