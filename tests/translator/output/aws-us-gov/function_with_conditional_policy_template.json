{
  "Conditions": {
    "DummyCondition": {
      "Fn::Equals": [
        "",
        ""
      ]
    }
  },
  "Resources": {
    "FunctionWithConditionalPolicy": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "hello.zip"
        },
        "Description": "A function that has Fn::If in the policies property",
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ],
        "Handler": "hello.handler",
        "Role": {
          "Fn::GetAtt": [
            "FunctionWithConditionalPolicyRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7"
      }
    },
    "FunctionWithConditionalPolicyRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws-us-gov:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "Fn::If": [
              "DummyCondition",
              {
                "PolicyName": "FunctionWithConditionalPolicyRolePolicy0",
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": [
                        "secretsmanager:GetSecretValue"
                      ],
                      "Resource": {
                        "Fn::Sub": [
                          "${secretArn}",
                          {
                            "secretArn": "Dummy Secret Arn"
                          }
                        ]
                      },
                      "Effect": "Allow"
                    }
                  ]
                }
              },
              {
                "PolicyName": "FunctionWithConditionalPolicyRolePolicy0",
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": [
                        "secretsmanager:DescribeSecret",
                        "secretsmanager:GetSecretValue",
                        "secretsmanager:PutSecretValue",
                        "secretsmanager:UpdateSecretVersionStage"
                      ],
                      "Resource": {
                        "Fn::Sub": "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
                      },
                      "Effect": "Allow",
                      "Condition": {
                        "StringEquals": {
                          "secretsmanager:resource/AllowRotationLambdaArn": {
                            "Fn::Sub": [
                              "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${functionName}",
                              {
                                "functionName": "Dummy Function Name"
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "Action": [
                        "secretsmanager:GetRandomPassword"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                    }
                  ]
                }
              }
            ]
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }
  }
}