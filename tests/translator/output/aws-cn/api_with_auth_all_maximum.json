{
  "Resources": {
    "MyFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Handler": "index.handler", 
        "Code": {
          "S3Bucket": "sam-demo-bucket", 
          "S3Key": "thumbnails.zip"
        }, 
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "nodejs8.10", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ]
      }
    }, 
    "MyFunctionWithLambdaTokenAuthorizerPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PATCH/users", 
            {
              "__Stage__": "Prod", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyApiMyLambdaRequestAuthAuthorizerPermission": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": "arn:aws", 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*", 
            {
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithLambdaTokenAuthorizerPermissionTest": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PATCH/users", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithDefaultAuthorizerPermissionTest": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/users", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithCognitoMultipleUserPoolsAuthorizerPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/users", 
            {
              "__Stage__": "Prod", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithNoAuthorizerPermissionTest": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ], 
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "MyApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0", 
            "title": {
              "Ref": "AWS::StackName"
            }
          }, 
          "paths": {
            "/": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "security": [
                  {
                    "NONE": []
                  }, 
                  {
                    "api_key": []
                  }
                ], 
                "responses": {}
              }
            }, 
            "/users": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "security": [
                  {
                    "MyCognitoAuth": []
                  }, 
                  {
                    "api_key": []
                  }
                ], 
                "responses": {}
              }, 
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "security": [
                  {
                    "MyCognitoAuthMultipleUserPools": []
                  }, 
                  {
                    "api_key": []
                  }
                ], 
                "responses": {}
              }, 
              "patch": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "security": [
                  {
                    "MyLambdaTokenAuthNoneFunctionInvokeRole": []
                  }, 
                  {
                    "api_key": []
                  }
                ], 
                "responses": {}
              }, 
              "delete": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "security": [
                  {
                    "MyLambdaRequestAuth": []
                  }, 
                  {
                    "api_key": []
                  }
                ], 
                "responses": {}
              }
            }
          }, 
          "swagger": "2.0", 
          "securityDefinitions": {
            "MyLambdaTokenAuthNoneFunctionInvokeRole": {
              "in": "header", 
              "type": "apiKey", 
              "name": "Authorization", 
              "x-amazon-apigateway-authorizer": {
                "type": "token", 
                "authorizerResultTtlInSeconds": 0, 
                "authorizerUri": {
                  "Fn::Sub": [
                    "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations", 
                    {
                      "__FunctionArn__": "arn:aws"
                    }
                  ]
                }
              }, 
              "x-amazon-apigateway-authtype": "custom"
            }, 
            "MyCognitoAuthMultipleUserPools": {
              "in": "header", 
              "type": "apiKey", 
              "name": "MyAuthorizationHeader2", 
              "x-amazon-apigateway-authorizer": {
                "identityValidationExpression": "myauthvalidationexpression2", 
                "providerARNs": [
                  "arn:aws:2", 
                  "arn:aws:3"
                ], 
                "type": "cognito_user_pools"
              }, 
              "x-amazon-apigateway-authtype": "cognito_user_pools"
            }, 
            "MyLambdaRequestAuth": {
              "in": "header", 
              "type": "apiKey", 
              "name": "Unused", 
              "x-amazon-apigateway-authorizer": {
                "type": "request", 
                "authorizerResultTtlInSeconds": 0, 
                "identitySource": "method.request.header.Authorization1, method.request.querystring.Authorization2, stageVariables.Authorization3, context.Authorization4", 
                "authorizerUri": {
                  "Fn::Sub": [
                    "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations", 
                    {
                      "__FunctionArn__": "arn:aws"
                    }
                  ]
                }, 
                "authorizerCredentials": "arn:aws:iam::123456789012:role/S3Access"
              }, 
              "x-amazon-apigateway-authtype": "custom"
            }, 
            "MyCognitoAuth": {
              "in": "header", 
              "type": "apiKey", 
              "name": "MyAuthorizationHeader", 
              "x-amazon-apigateway-authorizer": {
                "identityValidationExpression": "myauthvalidationexpression", 
                "providerARNs": [
                  "arn:aws:1"
                ], 
                "type": "cognito_user_pools"
              }, 
              "x-amazon-apigateway-authtype": "cognito_user_pools"
            }, 
            "MyLambdaTokenAuth": {
              "in": "header", 
              "type": "apiKey", 
              "name": "MyCustomAuthHeader", 
              "x-amazon-apigateway-authorizer": {
                "type": "token", 
                "authorizerResultTtlInSeconds": 20, 
                "authorizerUri": {
                  "Fn::Sub": [
                    "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations", 
                    {
                      "__FunctionArn__": "arn:aws"
                    }
                  ]
                }, 
                "authorizerCredentials": "arn:aws:iam::123456789012:role/S3Access", 
                "identityValidationExpression": "mycustomauthexpression"
              }, 
              "x-amazon-apigateway-authtype": "custom"
            }, 
            "api_key": {
              "type": "apiKey", 
              "name": "x-api-key", 
              "in": "header"
            }
          }
        }, 
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }, 
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      }
    }, 
    "MyApiMyLambdaTokenAuthAuthorizerPermission": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": "arn:aws", 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*", 
            {
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithLambdaRequestAuthorizerPermissionTest": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/users", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithLambdaRequestAuthorizerPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/DELETE/users", 
            {
              "__Stage__": "Prod", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithCognitoMultipleUserPoolsAuthorizerPermissionTest": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/users", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyApiMyLambdaTokenAuthNoneFunctionInvokeRoleAuthorizerPermission": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": "arn:aws", 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*", 
            {
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyApiDeployment2b4f028142": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "MyApi"
        }, 
        "Description": "RestApi deployment id: 2b4f028142eb38900e00f362b76751032ac4e464", 
        "StageName": "Stage"
      }
    }, 
    "MyApiProdStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiDeployment2b4f028142"
        }, 
        "RestApiId": {
          "Ref": "MyApi"
        }, 
        "StageName": "Prod"
      }
    }, 
    "MyFunctionWithNoAuthorizerPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/", 
            {
              "__Stage__": "Prod", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }, 
    "MyFunctionWithDefaultAuthorizerPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:invokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/users", 
            {
              "__Stage__": "Prod", 
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      }
    }
  }
}