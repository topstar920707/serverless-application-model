{
  "Resources": {
    "Bucket": {
      "DependsOn": [
        "MyConnectorWriteLambdaPermission"
      ],
      "Properties": {
        "BucketName": "random-bucket-name",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Function": {
                "Fn::GetAtt": [
                  "InvokedFunction",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "Function": {
      "Properties": {
        "Code": {
          "ZipFile": "const AWS = require('aws-sdk');\nexports.handler = async (event) => {\n  console.log(\"function\")\n};\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "FunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyConnectorWriteLambdaPermission": {
      "Metadata": {
        "aws:sam:connectors": {
          "MyConnector": {
            "Destination": {
              "Type": "AWS::Serverless::Function"
            },
            "Source": {
              "Type": "AWS::S3::Bucket"
            }
          }
        }
      },
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Function",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Fn::Sub": "${AWS::AccountId}"
        },
        "SourceArn": {
          "Fn::Sub": "arn:${AWS::Partition}:s3:::random-bucket-name"
        }
      },
      "Type": "AWS::Lambda::Permission"
    }
  }
}
