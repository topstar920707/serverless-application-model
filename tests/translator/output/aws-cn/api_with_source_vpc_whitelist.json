{
  "Parameters": {
    "Vpc1": {
      "Type": "String",
      "Default": "vpc-1234"
    }
  },
  "Resources": {
    "MyFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify('Hello from Lambda!'),\n  };\n  return response;\n};\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyFunctionFetchAnyMethodPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/fetch",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionApiAnyMethodPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any/get",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionFetchPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/fetch",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyFunctionApiPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/get",
            {
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "MyApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {}
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "MyApiDeployment5332c373d4": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: 5332c373d45c69e6c0f562b4a419aa8eb311adc7",
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "Stage"
      }
    },
    "MyApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiDeployment5332c373d4"
        },
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "Prod"
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/get": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            },
            "/any/get": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            },
            "/fetch": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            },
            "/any/fetch": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            }
          },
          "x-amazon-apigateway-policy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/PUT/get",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*"
              },
              {
                "Effect": "Deny",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/PUT/get",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*",
                "Condition": {
                  "StringNotEquals": {
                    "aws:SourceVpc": [
                      "vpc-1234",
                      "vpc-5678"
                    ]
                  }
                }
              },
              {
                "Effect": "Allow",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/*/any/get",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*"
              },
              {
                "Effect": "Deny",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/*/any/get",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*",
                "Condition": {
                  "StringNotEquals": {
                    "aws:SourceVpc": [
                      "vpc-1234",
                      "vpc-5678"
                    ]
                  }
                }
              },
              {
                "Effect": "Allow",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/POST/fetch",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*"
              },
              {
                "Effect": "Deny",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/POST/fetch",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*",
                "Condition": {
                  "StringNotEquals": {
                    "aws:SourceVpc": [
                      "vpc-1234",
                      "vpc-5678"
                    ]
                  }
                }
              },
              {
                "Effect": "Allow",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/*/any/fetch",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*"
              },
              {
                "Effect": "Deny",
                "Action": "execute-api:Invoke",
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/*/any/fetch",
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ],
                "Principal": "*",
                "Condition": {
                  "StringNotEquals": {
                    "aws:SourceVpc": [
                      "vpc-1234",
                      "vpc-5678"
                    ]
                  }
                }
              }
            ]
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "ServerlessRestApiDeploymentc62c165bfb": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: c62c165bfb751bc0db21849d287f7065a7a0e8f8",
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Stage"
      }
    },
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeploymentc62c165bfb"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      }
    }
  }
}