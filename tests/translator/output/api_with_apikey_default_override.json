{
    "Resources": {
      "MyApiWithAuthProdStage": {
        "Type": "AWS::ApiGateway::Stage", 
        "Properties": {
          "DeploymentId": {
            "Ref": "MyApiWithAuthDeployment054e605502"
          }, 
          "RestApiId": {
            "Ref": "MyApiWithAuth"
          }, 
          "StageName": "Prod"
        }
      }, 
      "MyFunctionWithApiKeyRequiredTrueMyApiWithApiKeyRequiredTruePermissionProd": {
        "Type": "AWS::Lambda::Permission", 
        "Properties": {
          "Action": "lambda:invokeFunction", 
          "Principal": "apigateway.amazonaws.com", 
          "FunctionName": {
            "Ref": "MyFunctionWithApiKeyRequiredTrue"
          }, 
          "SourceArn": {
            "Fn::Sub": [
              "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/ApiKeyTrue", 
              {
                "__Stage__": "*",
                "__ApiId__": {
                  "Ref": "MyApiWithAuth"
                }
              }
            ]
          }
        }
      }, 
      "MyFunctionWithApiKeyRequiredFalseMyApiWithApiKeyRequiredFalsePermissionProd": {
        "Type": "AWS::Lambda::Permission", 
        "Properties": {
          "Action": "lambda:invokeFunction", 
          "Principal": "apigateway.amazonaws.com", 
          "FunctionName": {
            "Ref": "MyFunctionWithApiKeyRequiredFalse"
          }, 
          "SourceArn": {
            "Fn::Sub": [
              "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/ApiKeyFalse", 
              {
                "__Stage__": "*",
                "__ApiId__": {
                  "Ref": "MyApiWithAuth"
                }
              }
            ]
          }
        }
      },
      "MyFunctionWithApiKeyRequiredTrue": {
        "Type": "AWS::Lambda::Function", 
        "Properties": {
          "Handler": "index.handler", 
          "Code": {
            "S3Bucket": "bucket", 
            "S3Key": "key"
          }, 
          "Role": {
            "Fn::GetAtt": [
              "MyFunctionWithApiKeyRequiredTrueRole", 
              "Arn"
            ]
          }, 
          "Runtime": "nodejs8.10", 
          "Tags": [
            {
              "Value": "SAM", 
              "Key": "lambda:createdBy"
            }
          ]
        }
      }, 
      "MyFunctionWithApiKeyRequiredDefault": {
        "Type": "AWS::Lambda::Function", 
        "Properties": {
          "Handler": "index.handler", 
          "Code": {
            "S3Bucket": "bucket", 
            "S3Key": "key"
          }, 
          "Role": {
            "Fn::GetAtt": [
              "MyFunctionWithApiKeyRequiredDefaultRole", 
              "Arn"
            ]
          }, 
          "Runtime": "nodejs8.10", 
          "Tags": [
            {
              "Value": "SAM", 
              "Key": "lambda:createdBy"
            }
          ]
        }
      }, 
      "MyFunctionWithApiKeyRequiredDefaultMyApiWithApiKeyRequiredDefaultPermissionProd": {
        "Type": "AWS::Lambda::Permission", 
        "Properties": {
          "Action": "lambda:invokeFunction", 
          "Principal": "apigateway.amazonaws.com", 
          "FunctionName": {
            "Ref": "MyFunctionWithApiKeyRequiredDefault"
          }, 
          "SourceArn": {
            "Fn::Sub": [
              "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/ApiKeyDefault", 
              {
                "__Stage__": "*",
                "__ApiId__": {
                  "Ref": "MyApiWithAuth"
                }
              }
            ]
          }
        }
      }, 
      "MyApiWithAuthDeployment054e605502": {
        "Type": "AWS::ApiGateway::Deployment", 
        "Properties": {
          "RestApiId": {
            "Ref": "MyApiWithAuth"
          }, 
          "Description": "RestApi deployment id: 054e60550295973114b1bc4384d00c8b641ea20f", 
          "StageName": "Stage"
        }
      }, 
      "MyFunctionWithApiKeyRequiredFalse": {
        "Type": "AWS::Lambda::Function", 
        "Properties": {
          "Handler": "index.handler", 
          "Code": {
            "S3Bucket": "bucket", 
            "S3Key": "key"
          }, 
          "Role": {
            "Fn::GetAtt": [
              "MyFunctionWithApiKeyRequiredFalseRole", 
              "Arn"
            ]
          }, 
          "Runtime": "nodejs8.10", 
          "Tags": [
            {
              "Value": "SAM", 
              "Key": "lambda:createdBy"
            }
          ]
        }
      }, 
      "MyFunctionWithApiKeyRequiredFalseRole": {
        "Type": "AWS::IAM::Role", 
        "Properties": {
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ], 
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17", 
            "Statement": [
              {
                "Action": [
                  "sts:AssumeRole"
                ], 
                "Effect": "Allow", 
                "Principal": {
                  "Service": [
                    "lambda.amazonaws.com"
                  ]
                }
              }
            ]
          }
        }
      }, 
      "MyFunctionWithApiKeyRequiredDefaultRole": {
        "Type": "AWS::IAM::Role", 
        "Properties": {
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ], 
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17", 
            "Statement": [
              {
                "Action": [
                  "sts:AssumeRole"
                ], 
                "Effect": "Allow", 
                "Principal": {
                  "Service": [
                    "lambda.amazonaws.com"
                  ]
                }
              }
            ]
          }
        }
      },
      "MyFunctionWithApiKeyRequiredTrueRole": {
        "Type": "AWS::IAM::Role", 
        "Properties": {
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ], 
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17", 
            "Statement": [
              {
                "Action": [
                  "sts:AssumeRole"
                ], 
                "Effect": "Allow", 
                "Principal": {
                  "Service": [
                    "lambda.amazonaws.com"
                  ]
                }
              }
            ]
          }
        }
      }, 
      "MyApiWithAuth": {
        "Type": "AWS::ApiGateway::RestApi", 
        "Properties": {
          "Body": {
            "info": {
              "version": "1.0", 
              "title": {
                "Ref": "AWS::StackName"
              }
            }, 
            "paths": {
              "/ApiKeyFalse": {
                "get": {
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "POST", 
                    "type": "aws_proxy", 
                    "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionWithApiKeyRequiredFalse.Arn}/invocations"
                    }
                  }, 
                  "security": [], 
                  "responses": {}
                }
              }, 
              "/ApiKeyTrue": {
                "get": {
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "POST", 
                    "type": "aws_proxy", 
                    "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionWithApiKeyRequiredTrue.Arn}/invocations"
                    }
                  }, 
                  "security": [
                    {
                      "api_key": []
                    }
                  ], 
                  "responses": {}
                }
              }, 
              "/ApiKeyDefault": {
                "get": {
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "POST", 
                    "type": "aws_proxy", 
                    "uri": {
                      "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionWithApiKeyRequiredDefault.Arn}/invocations"
                    }
                  }, 
                  "security": [
                    {
                      "api_key": []
                    }
                  ], 
                  "responses": {}
                }
              }
            }, 
            "swagger": "2.0", 
            "securityDefinitions": {
              "api_key": {
                "type": "apiKey", 
                "name": "x-api-key", 
                "in": "header"
              }
            }
          }
        }
      }
    }
  }