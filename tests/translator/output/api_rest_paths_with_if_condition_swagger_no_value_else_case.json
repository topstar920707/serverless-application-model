{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "FalseCondition": {
      "Fn::Equals": [
        true,
        false
      ]
    },
    "TrueCondition": {
      "Fn::Equals": [
        true,
        true
      ]
    }
  },
  "Description": "sam-app\nSample SAM Template for sam-app\n",
  "Resources": {
    "MyApi": {
      "Properties": {
        "Body": {
          "info": {
            "title": {
              "Fn::Sub": "${AWS::StackName}-Api"
            }
          },
          "paths": {
            "/post": {
              "Fn::If": [
                "FalseCondition",
                {
                  "options": {
                    "consumes": [
                      "application/json"
                    ],
                    "produces": [
                      "application/json"
                    ],
                    "responses": {
                      "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                          "Access-Control-Allow-Methods": {
                            "type": "string"
                          },
                          "Access-Control-Allow-Origin": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "security": [
                      {
                        "MyLambdaAuthUpdated": []
                      },
                      {
                        "api_key": []
                      }
                    ],
                    "summary": "CORS support",
                    "x-amazon-apigateway-integration": {
                      "requestTemplates": {
                        "application/json": "{\n  \"statusCode\" : 200\n}\n"
                      },
                      "responses": {
                        "default": {
                          "responseParameters": {
                            "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                            "method.response.header.Access-Control-Allow-Origin": {
                              "Fn::Join": [
                                ",",
                                [
                                  "www.amazon.com",
                                  "www.google.com"
                                ]
                              ]
                            }
                          },
                          "responseTemplates": {
                            "application/json": "{}\n"
                          },
                          "statusCode": "200"
                        }
                      },
                      "type": "mock"
                    }
                  },
                  "post": {
                    "security": [
                      {
                        "MyLambdaAuthUpdated": []
                      },
                      {
                        "api_key": []
                      }
                    ],
                    "x-amazon-apigateway-integration": {
                      "httpMethod": "POST",
                      "payloadFormatVersion": "1.0",
                      "type": "aws_proxy",
                      "uri": "https://www.otherURI.co/"
                    }
                  }
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          },
          "securityDefinitions": {
            "MyLambdaAuthUpdated": {
              "in": "header",
              "name": "Authorization",
              "type": "apiKey",
              "x-amazon-apigateway-authorizer": {
                "authorizerCredentials": {
                  "Fn::GetAtt": [
                    "MyAuthFnRole",
                    "Arn"
                  ]
                },
                "authorizerResultTtlInSeconds": 37,
                "authorizerUri": {
                  "Fn::Sub": [
                    "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations",
                    {
                      "__FunctionArn__": {
                        "Fn::GetAtt": [
                          "MyAuthFn",
                          "Arn"
                        ]
                      }
                    }
                  ]
                },
                "type": "token"
              },
              "x-amazon-apigateway-authtype": "custom"
            },
            "api_key": {
              "in": "header",
              "name": "x-api-key",
              "type": "apiKey"
            }
          },
          "swagger": "2.0"
        }
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "MyApiDeployment4cb7772053": {
      "Properties": {
        "Description": "RestApi deployment id: 4cb77720534f1e01dd19505971d13dae3adeab53",
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "Stage"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "MyApiMyLambdaAuthUpdatedAuthorizerPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "MyAuthFn",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*",
            {
              "__ApiId__": {
                "Ref": "MyApi"
              }
            }
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "MyApidevStage": {
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiDeployment4cb7772053"
        },
        "RestApiId": {
          "Ref": "MyApi"
        },
        "StageName": "dev"
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "MyAuthFn": {
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "hello.zip"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyAuthFnRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyAuthFnRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    }
  }
}
