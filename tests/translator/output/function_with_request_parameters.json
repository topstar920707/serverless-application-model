{
  "Resources": {
    "ApiParameterFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.gethtml",
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "member_portal.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "ApiParameterFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs4.3",
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ]
      }
    },
    "NoApiParameterFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "ServerlessRestApiDeployment2223b43914": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "Description": "RestApi deployment id: 2223b439142974b7a3aad1381ddd39027077ce52",
        "StageName": "Stage"
      }
    },
    "ApiParameterFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "NoApiParameterFunctionGetHtmlPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "NoApiParameterFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/",
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    },
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeployment2223b43914"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      }
    },
    "Api": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiParameterFunction.Arn}/invocations"
                  },
                  "cacheKeyParameters": [
                    "method.request.header.Authorization"
                  ]
                },
                "responses": {},
                "parameters": [
                  {
                    "required": true,
                    "type": "string",
                    "name": "Authorization",
                    "in": "header"
                  }
                ]
              }
            }
          },
          "swagger": "2.0"
        }
      }
    },
    "ApiParameterFunctionGetHtmlPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "ApiParameterFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/",
            {
              "__Stage__": "*",
              "__ApiId__": "Api"
            }
          ]
        }
      }
    },
    "ApiDeploymentb45131471b": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "Api"
        },
        "Description": "RestApi deployment id: b45131471b437edb4cca88487357f3bfbcf59866",
        "StageName": "Stage"
      }
    },
    "ApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiDeploymentb45131471b"
        },
        "RestApiId": {
          "Ref": "Api"
        },
        "StageName": "Prod"
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NoApiParameterFunction.Arn}/invocations"
                  }
                },
                "responses": {},
                "parameters": [
                  {
                    "required": false,
                    "type": "string",
                    "name": "type",
                    "in": "query"
                  },
                  {
                    "required": false,
                    "type": "string",
                    "name": "id",
                    "in": "path"
                  }
                ]
              }
            }
          },
          "swagger": "2.0"
        }
      }
    },
    "NoApiParameterFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.gethtml",
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "member_portal.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "NoApiParameterFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs4.3",
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ]
      }
    }
  }
}