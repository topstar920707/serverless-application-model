{
  "Resources": {
    "MyFunction": {
      "Type": "AWS::Lambda::Function", 
      "Properties": {
        "Handler": "index.handler", 
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify('Hello from Lambda!'),\n  };\n  return response;\n};\n"
        }, 
        "Role": {
          "Fn::GetAtt": [
            "MyFunctionRole", 
            "Arn"
          ]
        }, 
        "Runtime": "nodejs8.10", 
        "Tags": [
          {
            "Value": "SAM", 
            "Key": "lambda:createdBy"
          }
        ]
      }
    }, 
    "MyFunctionFetchPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:InvokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/fetch", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    }, 
    "MyApiProdStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "MyApiDeployment5332c373d4"
        }, 
        "RestApiId": {
          "Ref": "MyApi"
        }, 
        "StageName": "Prod"
      }
    }, 
    "ServerlessRestApiDeploymente137534328": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        }, 
        "Description": "RestApi deployment id: e1375343284100b701b94f5b3d70cde0563eca05", 
        "StageName": "Stage"
      }
    }, 
    "MyApiDeployment5332c373d4": {
      "Type": "AWS::ApiGateway::Deployment", 
      "Properties": {
        "RestApiId": {
          "Ref": "MyApi"
        }, 
        "Description": "RestApi deployment id: 5332c373d45c69e6c0f562b4a419aa8eb311adc7", 
        "StageName": "Stage"
      }
    }, 
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage", 
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeploymente137534328"
        }, 
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        }, 
        "StageName": "Prod"
      }
    }, 
    "MyApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0", 
            "title": {
              "Ref": "AWS::StackName"
            }
          }, 
          "paths": {}, 
          "swagger": "2.0"
        }
      }
    }, 
    "MyFunctionRole": {
      "Type": "AWS::IAM::Role", 
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17", 
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ], 
              "Effect": "Allow", 
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }, 
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi", 
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0", 
            "title": {
              "Ref": "AWS::StackName"
            }
          }, 
          "paths": {
            "/get": {
              "put": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }, 
            "/fetch": {
              "post": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST", 
                  "type": "aws_proxy", 
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunction.Arn}/invocations"
                  }
                }, 
                "responses": {}
              }
            }
          }, 
          "swagger": "2.0", 
          "x-amazon-apigateway-policy": {
            "Version": "2012-10-17", 
            "Statement": [
              {
                "Action": "execute-api:Invoke", 
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/PUT/get", 
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ], 
                "Effect": "Allow", 
                "Principal": "*"
              }, 
              {
                "Action": "execute-api:Invoke", 
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/PUT/get", 
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ], 
                "Effect": "Deny", 
                "Condition": {
                  "StringNotEquals": {
                    "aws:SourceVpc": "vpc-1234"
                  }
                }, 
                "Principal": "*"
              }, 
              {
                "Action": "execute-api:Invoke", 
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/PUT/get", 
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ], 
                "Effect": "Deny", 
                "Condition": {
                  "StringEquals": {
                    "aws:SourceVpce": "vpce-5678"
                  }
                }, 
                "Principal": "*"
              }, 
              {
                "Action": "execute-api:Invoke", 
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/POST/fetch", 
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ], 
                "Effect": "Allow", 
                "Principal": "*"
              }, 
              {
                "Action": "execute-api:Invoke", 
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/POST/fetch", 
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ], 
                "Effect": "Deny", 
                "Condition": {
                  "StringNotEquals": {
                    "aws:SourceVpc": "vpc-1234"
                  }
                }, 
                "Principal": "*"
              }, 
              {
                "Action": "execute-api:Invoke", 
                "Resource": [
                  {
                    "Fn::Sub": [
                      "execute-api:/${__Stage__}/POST/fetch", 
                      {
                        "__Stage__": "Prod"
                      }
                    ]
                  }
                ], 
                "Effect": "Deny", 
                "Condition": {
                  "StringEquals": {
                    "aws:SourceVpce": "vpce-5678"
                  }
                }, 
                "Principal": "*"
              }
            ]
          }
        }
      }
    }, 
    "MyFunctionApiPermissionProd": {
      "Type": "AWS::Lambda::Permission", 
      "Properties": {
        "Action": "lambda:InvokeFunction", 
        "Principal": "apigateway.amazonaws.com", 
        "FunctionName": {
          "Ref": "MyFunction"
        }, 
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/PUT/get", 
            {
              "__Stage__": "*", 
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    }
  }
}
