{
  "Resources": {
    "MyConnector": {
      "Properties": {
        "Destination": {
          "Id": "MyTable"
        },
        "Permissions": [
          "Read"
        ],
        "Source": {
          "Id": "MyFunction"
        }
      },
      "Type": "AWS::Serverless::Connector"
    },
    "MyConnectorWith2ACs": {
      "Properties": {
        "Destination": {
          "Arn": {
            "Fn::GetAtt": [
              "MyTable",
              "Arn"
            ]
          },
          "Type": "AWS::DynamoDB::Table"
        },
        "Permissions": [
          "Read",
          "Write"
        ],
        "Source": {
          "Id": "MyFunction"
        }
      },
      "Type": "AWS::Serverless::Connector"
    },
    "MyConnectorWithRoleName": {
      "Properties": {
        "Destination": {
          "Arn": {
            "Fn::GetAtt": [
              "MyTable",
              "Arn"
            ]
          },
          "Type": "AWS::DynamoDB::Table"
        },
        "Permissions": [
          "Read"
        ],
        "Source": {
          "Arn": {
            "Fn::GetAtt": [
              "MyFunction",
              "Arn"
            ]
          },
          "RoleName": {
            "Ref": "MyRole"
          },
          "Type": "AWS::Lambda::Function"
        }
      },
      "Type": "AWS::Serverless::Connector"
    },
    "MyConnectorWithTableArn": {
      "Properties": {
        "Destination": {
          "Arn": {
            "Fn::GetAtt": [
              "MyTable",
              "Arn"
            ]
          },
          "Type": "AWS::DynamoDB::Table"
        },
        "Permissions": [
          "Read"
        ],
        "Source": {
          "Id": "MyServerlessFunction"
        }
      },
      "Type": "AWS::Serverless::Connector"
    },
    "MyFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "const AWS = require('aws-sdk');\nexports.handler = async (event) => {\n  console.log(JSON.stringify(event));\n  const docClient = new AWS.DynamoDB.DocumentClient();\n  await docClient.scan({ TableName: process.env.TABLE_NAME, }).promise();\n};\n"
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "MyTable"
            }
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x"
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:{AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyServerlessFunction": {
      "Properties": {
        "Code": {
          "ZipFile": "const AWS = require('aws-sdk');\nexports.handler = async (event) => {\n  console.log(JSON.stringify(event));\n  const docClient = new AWS.DynamoDB.DocumentClient();\n  await docClient.scan({ TableName: process.env.TABLE_NAME, }).promise();\n};\n"
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "MyTable"
            }
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MyServerlessFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::Lambda::Function"
    },
    "MyServerlessFunctionRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "MyTable": {
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "Id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "Id",
            "KeyType": "HASH"
          }
        ]
      },
      "Type": "AWS::DynamoDB::Table"
    }
  }
}
