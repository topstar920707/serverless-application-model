{
  "Resources": {
    "HtmlFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "HtmlApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "HtmlApiDeploymentcb065c609e"
        },
        "RestApiId": {
          "Ref": "HtmlApi"
        },
        "StageName": "Prod"
      }
    },
    "HtmlFunctionGetHtmlPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "HtmlFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/",
            {
              "__Stage__": "*",
              "__ApiId__": "HtmlApi"
            }
          ]
        }
      }
    },
    "HtmlFunctionAnyPathPermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "HtmlFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/any",
            {
              "__ApiId__": "HtmlApi",
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "HtmlApiDeploymentcb065c609e": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "HtmlApi"
        },
        "Description": "RestApi deployment id: cb065c609e3452b9ac6cc88cd778dce0647a0a10",
        "StageName": "Stage"
      }
    },
    "HtmlApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/": {
              "get": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HtmlFunction.Arn}/invocations"
                  }
                },
                "responses": {},
                "parameters": [
                  {
                    "required": true,
                    "in": "body",
                    "name": "user",
                    "schema": {
                      "$ref": "#/definitions/user"
                    }
                  }
                ]
              }
            },
            "/any": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "type": "aws_proxy",
                  "httpMethod": "POST",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HtmlFunction.Arn}/invocations"
                  }
                },
                "responses": {},
                "parameters": [
                  {
                    "in": "body",
                    "name": "user",
                    "schema": {
                      "$ref": "#/definitions/user"
                    },
                    "required": true
                  }
                ]
              }
            }
          },
          "swagger": "2.0",
          "definitions": {
            "user": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "HtmlFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "member_portal.zip"
        },
        "Handler": "index.gethtml",
        "Role": {
          "Fn::GetAtt": [
            "HtmlFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          }
        ]
      }
    }
  }
}
