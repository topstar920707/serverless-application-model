Resources:
  MyVpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
    DependsOn:
      - MyLambdaExecutionRole
      
  MySubnetOne:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: MyVpc
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
    DependsOn:
      - MyVpc
  
  MySubnetTwo:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: MyVpc
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
    DependsOn:
      - MyVpc

  MyLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
      Policies:
        - PolicyName: IntegrationTestExecution
          PolicyDocument:
            Statement:
              - Action: [ 'kafka:DescribeCluster',
                          'kafka:GetBootstrapBrokers',
                          'ec2:CreateNetworkInterface',
                          'ec2:DescribeNetworkInterfaces',
                          'ec2:DescribeVpcs',
                          'ec2:DeleteNetworkInterface',
                          'ec2:DescribeSubnets',
                          'ec2:DescribeSecurityGroups',
                          'logs:CreateLogGroup',
                          'logs:CreateLogStream',
                          'logs:PutLogEvents']
                Effect: Allow
                Resource: '*'
      ManagedPolicyArns: ['arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole']
      Tags:
      - {Value: SAM, Key: 'lambda:createdBy'}

  MyMskCluster:
    Type: 'AWS::MSK::Cluster'
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets:
          - Ref: MySubnetOne
          - Ref: MySubnetTwo
        InstanceType: kafka.t3.small
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 1
      ClusterName: MyMskClusterTestName
      KafkaVersion: 2.4.1.1
      NumberOfBrokerNodes: 2
    DependsOn: 
      - MyVpc
      - MySubnetOne
      - MySubnetTwo
      - MyLambdaExecutionRole

  MyMskStreamProcessor:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: nodejs12.x
      Handler: index.handler
      CodeUri: ${codeuri}
      Role:
        Fn::GetAtt: [MyLambdaExecutionRole, Arn]
      Events:
        MyMskEvent:
          Type: MSK
          Properties:
            StartingPosition: LATEST
            Stream: 
              Ref: MyMskCluster
            Topics:
              - "MyDummyTestTopic"
    DependsOn: 
      - MyVpc
      - MySubnetOne
      - MySubnetTwo
      - MyLambdaExecutionRole
      - MyMskCluster

